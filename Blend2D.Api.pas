unit Blend2D.Api;
{ Blend2D for Delphi.
  Based on Blend2D 0.12.0 (https://blend2d.com/download/blend2d-0.12.0-all.zip) }

{ This unit is partially generated by Chet:
  https://github.com/neslib/Chet }

interface

uses
  {$IF Defined(MSWINDOWS)}
  Winapi.Windows;
  {$ELSEIF Defined(POSIX)}
  Posix.StdDef;
  {$ENDIF}

const
  {$IF Defined(WIN32)}
  _LIB_BLEND2D = 'blend2d_win32.dll';
  _PU = '';
  {$ELSEIF Defined(WIN64)}
  _LIB_BLEND2D = 'blend2d_win64.dll';
  _PU = '';
  {$ELSEIF Defined(MACOS64) and not Defined(IOS)}
    {$MESSAGE Error 'Blend2D for macOS not available yet'}
//  LIB_BLEND2D = 'libblend2d_mac64.a';
//  _PU = '';
  {$ELSEIF Defined(IOS64)}
    {$MESSAGE Error 'Blend2D for iOS not available yet'}
  {$ELSEIF Defined(ANDROID)}
    {$MESSAGE Error 'Blend2D for Android not available yet'}
  {$ELSE}
    {$MESSAGE Error 'Unsupported platform'}
  {$ENDIF}

type
  PUInt8     = PByte;
  PPUInt8    = ^PByte;
  PUInt16    = ^UInt16;
  PInt32     = ^Int32;
  PUInt32    = ^UInt32;
  PPUInt32   = ^PUInt32;
  PPUTF8Char = ^PUTF8Char;

{$REGION 'api.h'}
const
  { These constants are not in the header file, but taken from the BL_VERSION
    macro in api.h }
  _BL_VERSION_MAJOR = 0;
  _BL_VERSION_MINOR = 12;
  _BL_VERSION_PATCH = 0;

const
  _BL_VERSION    = (_BL_VERSION_MAJOR shl 16) or (_BL_VERSION_MINOR shl 8) or _BL_VERSION_PATCH;
  _BL_BYTE_ORDER = 1234;

type
  _BLResult   = UInt32;
  _BLTag      = UInt32;
  _BLUniqueId = UInt64;
  _PBLUnknown = Pointer;

type
  _BLDebugMessageSinkFunc = procedure(const message: PUTF8Char; size: size_t; userData: Pointer); cdecl;

type
  _PBLTag = ^_BLTag;

function _BL_MAKE_TAG(const A, B, C, D: Byte): _BLTag; inline;

type
  _BLResultCode = Integer;

const
  _BL_SUCCESS                            = 0;
  _BL_ERROR_START_INDEX                  = 65536;
  _BL_ERROR_OUT_OF_MEMORY                = 65536;
  _BL_ERROR_INVALID_VALUE                = 65537;
  _BL_ERROR_INVALID_STATE                = 65538;
  _BL_ERROR_INVALID_HANDLE               = 65539;
  _BL_ERROR_INVALID_CONVERSION           = 65540;
  _BL_ERROR_OVERFLOW                     = 65541;
  _BL_ERROR_NOT_INITIALIZED              = 65542;
  _BL_ERROR_NOT_IMPLEMENTED              = 65543;
  _BL_ERROR_NOT_PERMITTED                = 65544;
  _BL_ERROR_IO                           = 65545;
  _BL_ERROR_BUSY                         = 65546;
  _BL_ERROR_INTERRUPTED                  = 65547;
  _BL_ERROR_TRY_AGAIN                    = 65548;
  _BL_ERROR_TIMED_OUT                    = 65549;
  _BL_ERROR_BROKEN_PIPE                  = 65550;
  _BL_ERROR_INVALID_SEEK                 = 65551;
  _BL_ERROR_SYMLINK_LOOP                 = 65552;
  _BL_ERROR_FILE_TOO_LARGE               = 65553;
  _BL_ERROR_ALREADY_EXISTS               = 65554;
  _BL_ERROR_ACCESS_DENIED                = 65555;
  _BL_ERROR_MEDIA_CHANGED                = 65556;
  _BL_ERROR_READ_ONLY_FS                 = 65557;
  _BL_ERROR_NO_DEVICE                    = 65558;
  _BL_ERROR_NO_ENTRY                     = 65559;
  _BL_ERROR_NO_MEDIA                     = 65560;
  _BL_ERROR_NO_MORE_DATA                 = 65561;
  _BL_ERROR_NO_MORE_FILES                = 65562;
  _BL_ERROR_NO_SPACE_LEFT                = 65563;
  _BL_ERROR_NOT_EMPTY                    = 65564;
  _BL_ERROR_NOT_FILE                     = 65565;
  _BL_ERROR_NOT_DIRECTORY                = 65566;
  _BL_ERROR_NOT_SAME_DEVICE              = 65567;
  _BL_ERROR_NOT_BLOCK_DEVICE             = 65568;
  _BL_ERROR_INVALID_FILE_NAME            = 65569;
  _BL_ERROR_FILE_NAME_TOO_LONG           = 65570;
  _BL_ERROR_TOO_MANY_OPEN_FILES          = 65571;
  _BL_ERROR_TOO_MANY_OPEN_FILES_BY_OS    = 65572;
  _BL_ERROR_TOO_MANY_LINKS               = 65573;
  _BL_ERROR_TOO_MANY_THREADS             = 65574;
  _BL_ERROR_THREAD_POOL_EXHAUSTED        = 65575;
  _BL_ERROR_FILE_EMPTY                   = 65576;
  _BL_ERROR_OPEN_FAILED                  = 65577;
  _BL_ERROR_NOT_ROOT_DEVICE              = 65578;
  _BL_ERROR_UNKNOWN_SYSTEM_ERROR         = 65579;
  _BL_ERROR_INVALID_ALIGNMENT            = 65580;
  _BL_ERROR_INVALID_SIGNATURE            = 65581;
  _BL_ERROR_INVALID_DATA                 = 65582;
  _BL_ERROR_INVALID_STRING               = 65583;
  _BL_ERROR_INVALID_KEY                  = 65584;
  _BL_ERROR_DATA_TRUNCATED               = 65585;
  _BL_ERROR_DATA_TOO_LARGE               = 65586;
  _BL_ERROR_DECOMPRESSION_FAILED         = 65587;
  _BL_ERROR_INVALID_GEOMETRY             = 65588;
  _BL_ERROR_NO_MATCHING_VERTEX           = 65589;
  _BL_ERROR_INVALID_CREATE_FLAGS         = 65590;
  _BL_ERROR_NO_MATCHING_COOKIE           = 65591;
  _BL_ERROR_NO_STATES_TO_RESTORE         = 65592;
  _BL_ERROR_TOO_MANY_SAVED_STATES        = 65593;
  _BL_ERROR_IMAGE_TOO_LARGE              = 65594;
  _BL_ERROR_IMAGE_NO_MATCHING_CODEC      = 65595;
  _BL_ERROR_IMAGE_UNKNOWN_FILE_FORMAT    = 65596;
  _BL_ERROR_IMAGE_DECODER_NOT_PROVIDED   = 65597;
  _BL_ERROR_IMAGE_ENCODER_NOT_PROVIDED   = 65598;
  _BL_ERROR_PNG_MULTIPLE_IHDR            = 65599;
  _BL_ERROR_PNG_INVALID_IDAT             = 65600;
  _BL_ERROR_PNG_INVALID_IEND             = 65601;
  _BL_ERROR_PNG_INVALID_PLTE             = 65602;
  _BL_ERROR_PNG_INVALID_TRNS             = 65603;
  _BL_ERROR_PNG_INVALID_FILTER           = 65604;
  _BL_ERROR_JPEG_UNSUPPORTED_FEATURE     = 65605;
  _BL_ERROR_JPEG_INVALID_SOS             = 65606;
  _BL_ERROR_JPEG_INVALID_SOF             = 65607;
  _BL_ERROR_JPEG_MULTIPLE_SOF            = 65608;
  _BL_ERROR_JPEG_UNSUPPORTED_SOF         = 65609;
  _BL_ERROR_FONT_NOT_INITIALIZED         = 65610;
  _BL_ERROR_FONT_NO_MATCH                = 65611;
  _BL_ERROR_FONT_NO_CHARACTER_MAPPING    = 65612;
  _BL_ERROR_FONT_MISSING_IMPORTANT_TABLE = 65613;
  _BL_ERROR_FONT_FEATURE_NOT_AVAILABLE   = 65614;
  _BL_ERROR_FONT_CFF_INVALID_DATA        = 65615;
  _BL_ERROR_FONT_PROGRAM_TERMINATED      = 65616;
  _BL_ERROR_GLYPH_SUBSTITUTION_TOO_LARGE = 65617;
  _BL_ERROR_INVALID_GLYPH                = 65618;

type
  _BLByteOrder = Integer;

const
  _BL_BYTE_ORDER_LE      = 0;
  _BL_BYTE_ORDER_BE      = 1;
  _BL_BYTE_ORDER_NATIVE  = _BL_BYTE_ORDER_LE;
  _BL_BYTE_ORDER_SWAPPED = _BL_BYTE_ORDER_BE;

type
  _BLDataAccessFlags = Integer;

const
  _BL_DATA_ACCESS_NO_FLAGS = 0;
  _BL_DATA_ACCESS_READ     = 1;
  _BL_DATA_ACCESS_WRITE    = 2;
  _BL_DATA_ACCESS_RW       = 3;

type
  _BLDataSourceType = Integer;

const
  _BL_DATA_SOURCE_TYPE_NONE      = 0;
  _BL_DATA_SOURCE_TYPE_MEMORY    = 1;
  _BL_DATA_SOURCE_TYPE_FILE      = 2;
  _BL_DATA_SOURCE_TYPE_CUSTOM    = 3;
  _BL_DATA_SOURCE_TYPE_MAX_VALUE = 3;

type
  _BLModifyOp = Integer;

const
  _BL_MODIFY_OP_ASSIGN_FIT  = 0;
  _BL_MODIFY_OP_ASSIGN_GROW = 1;
  _BL_MODIFY_OP_APPEND_FIT  = 2;
  _BL_MODIFY_OP_APPEND_GROW = 3;
  _BL_MODIFY_OP_MAX_VALUE   = 3;

type
  _BLBooleanOp = Integer;

const
  _BL_BOOLEAN_OP_COPY      = 0;
  _BL_BOOLEAN_OP_AND       = 1;
  _BL_BOOLEAN_OP_OR        = 2;
  _BL_BOOLEAN_OP_XOR       = 3;
  _BL_BOOLEAN_OP_AND_NOT   = 4;
  _BL_BOOLEAN_OP_NOT_AND   = 5;
  _BL_BOOLEAN_OP_MAX_VALUE = 5;

type
  _BLExtendMode = Integer;

const
  _BL_EXTEND_MODE_PAD                 = 0;
  _BL_EXTEND_MODE_REPEAT              = 1;
  _BL_EXTEND_MODE_REFLECT             = 2;
  _BL_EXTEND_MODE_PAD_X_PAD_Y         = 0;
  _BL_EXTEND_MODE_PAD_X_REPEAT_Y      = 3;
  _BL_EXTEND_MODE_PAD_X_REFLECT_Y     = 4;
  _BL_EXTEND_MODE_REPEAT_X_REPEAT_Y   = 1;
  _BL_EXTEND_MODE_REPEAT_X_PAD_Y      = 5;
  _BL_EXTEND_MODE_REPEAT_X_REFLECT_Y  = 6;
  _BL_EXTEND_MODE_REFLECT_X_REFLECT_Y = 2;
  _BL_EXTEND_MODE_REFLECT_X_PAD_Y     = 7;
  _BL_EXTEND_MODE_REFLECT_X_REPEAT_Y  = 8;
  _BL_EXTEND_MODE_SIMPLE_MAX_VALUE    = 2;
  _BL_EXTEND_MODE_COMPLEX_MAX_VALUE   = 8;
  _BL_EXTEND_MODE_MAX_VALUE           = 8;

type
  _BLTextEncoding = Integer;

const
  _BL_TEXT_ENCODING_UTF8      = 0;
  _BL_TEXT_ENCODING_UTF16     = 1;
  _BL_TEXT_ENCODING_UTF32     = 2;
  _BL_TEXT_ENCODING_LATIN1    = 3;
  _BL_TEXT_ENCODING_WCHAR     = _BL_TEXT_ENCODING_UTF16;
  _BL_TEXT_ENCODING_MAX_VALUE = 3;

type
  _BLRange = record
    start: Size_T;
    &end: Size_T;
  end;
  _PBLRange = ^_BLRange;

type
  _BLArrayView = record
    data: Pointer;
    size: Size_T;
  end;

type
  _BLStringView = record
    data: PUTF8Char;
    size: Size_T;
  end;

type
  _BLDataView = _BLArrayView;
{$ENDREGION 'api.h'}

{$REGION 'rgba.h'}
type
  _BLRgba32 = record
    value: UInt32;
  end;
  _PBLRgba32 = ^_BLRgba32;

type
  _BLRgba64 = record
    value: UInt64;
  end;
  _PBLRgba64 = ^_BLRgba64;

type
  _BLRgba = record
    r: Single;
    g: Single;
    b: Single;
    a: Single;
  end;
  _PBLRgba = ^_BLRgba;
{$ENDREGION 'rgba.h'}

{$REGION 'object.h'}
type
  _PBLObjectImpl = Pointer;

type
  _BLObjectInfoShift = Integer;

const
  _BL_OBJECT_INFO_P_SHIFT    = 0;
  _BL_OBJECT_INFO_Q_SHIFT    = 8;
  _BL_OBJECT_INFO_C_SHIFT    = 8;
  _BL_OBJECT_INFO_B_SHIFT    = 12;
  _BL_OBJECT_INFO_A_SHIFT    = 16;
  _BL_OBJECT_INFO_TYPE_SHIFT = 22;
  _BL_OBJECT_INFO_R_SHIFT    = 29;
  _BL_OBJECT_INFO_D_SHIFT    = 30;
  _BL_OBJECT_INFO_M_SHIFT    = 31;

type
  _BLObjectInfoBits = Integer;

const
  _BL_OBJECT_INFO_P_MASK      = $FF shl _BL_OBJECT_INFO_P_SHIFT;
  _BL_OBJECT_INFO_Q_MASK      = $FF shl _BL_OBJECT_INFO_Q_SHIFT;
  _BL_OBJECT_INFO_C_MASK      = $0F shl _BL_OBJECT_INFO_C_SHIFT;
  _BL_OBJECT_INFO_B_MASK      = $0F shl _BL_OBJECT_INFO_B_SHIFT;
  _BL_OBJECT_INFO_A_MASK      = $3F shl _BL_OBJECT_INFO_A_SHIFT;
  _BL_OBJECT_INFO_FIELDS_MASK = $003FFFFF;
  _BL_OBJECT_INFO_TYPE_MASK   = $7F shl _BL_OBJECT_INFO_TYPE_SHIFT;
  _BL_OBJECT_INFO_R_FLAG      = $01 shl _BL_OBJECT_INFO_R_SHIFT;
  _BL_OBJECT_INFO_D_FLAG      = $01 shl _BL_OBJECT_INFO_D_SHIFT;
  _BL_OBJECT_INFO_M_FLAG      = $01 shl _BL_OBJECT_INFO_M_SHIFT;
  _BL_OBJECT_INFO_MD_FLAGS    = _BL_OBJECT_INFO_M_FLAG or _BL_OBJECT_INFO_D_FLAG;
  _BL_OBJECT_INFO_MDR_FLAGS   = _BL_OBJECT_INFO_M_FLAG or _BL_OBJECT_INFO_D_FLAG or _BL_OBJECT_INFO_R_FLAG;

type
  _BLObjectType = Integer;

const
  _BL_OBJECT_TYPE_RGBA                    = 0;
  _BL_OBJECT_TYPE_RGBA32                  = 1;
  _BL_OBJECT_TYPE_RGBA64                  = 2;
  _BL_OBJECT_TYPE_NULL                    = 3;
  _BL_OBJECT_TYPE_PATTERN                 = 4;
  _BL_OBJECT_TYPE_GRADIENT                = 5;
  _BL_OBJECT_TYPE_IMAGE                   = 9;
  _BL_OBJECT_TYPE_PATH                    = 10;
  _BL_OBJECT_TYPE_FONT                    = 16;
  _BL_OBJECT_TYPE_FONT_FEATURE_SETTINGS   = 17;
  _BL_OBJECT_TYPE_FONT_VARIATION_SETTINGS = 18;
  _BL_OBJECT_TYPE_BIT_ARRAY               = 25;
  _BL_OBJECT_TYPE_BIT_SET                 = 26;
  _BL_OBJECT_TYPE_BOOL                    = 28;
  _BL_OBJECT_TYPE_INT64                   = 29;
  _BL_OBJECT_TYPE_UINT64                  = 30;
  _BL_OBJECT_TYPE_DOUBLE                  = 31;
  _BL_OBJECT_TYPE_STRING                  = 32;
  _BL_OBJECT_TYPE_ARRAY_OBJECT            = 33;
  _BL_OBJECT_TYPE_ARRAY_INT8              = 34;
  _BL_OBJECT_TYPE_ARRAY_UINT8             = 35;
  _BL_OBJECT_TYPE_ARRAY_INT16             = 36;
  _BL_OBJECT_TYPE_ARRAY_UINT16            = 37;
  _BL_OBJECT_TYPE_ARRAY_INT32             = 38;
  _BL_OBJECT_TYPE_ARRAY_UINT32            = 39;
  _BL_OBJECT_TYPE_ARRAY_INT64             = 40;
  _BL_OBJECT_TYPE_ARRAY_UINT64            = 41;
  _BL_OBJECT_TYPE_ARRAY_FLOAT32           = 42;
  _BL_OBJECT_TYPE_ARRAY_FLOAT64           = 43;
  _BL_OBJECT_TYPE_ARRAY_STRUCT_1          = 44;
  _BL_OBJECT_TYPE_ARRAY_STRUCT_2          = 45;
  _BL_OBJECT_TYPE_ARRAY_STRUCT_3          = 46;
  _BL_OBJECT_TYPE_ARRAY_STRUCT_4          = 47;
  _BL_OBJECT_TYPE_ARRAY_STRUCT_6          = 48;
  _BL_OBJECT_TYPE_ARRAY_STRUCT_8          = 49;
  _BL_OBJECT_TYPE_ARRAY_STRUCT_10         = 50;
  _BL_OBJECT_TYPE_ARRAY_STRUCT_12         = 51;
  _BL_OBJECT_TYPE_ARRAY_STRUCT_16         = 52;
  _BL_OBJECT_TYPE_ARRAY_STRUCT_20         = 53;
  _BL_OBJECT_TYPE_ARRAY_STRUCT_24         = 54;
  _BL_OBJECT_TYPE_ARRAY_STRUCT_32         = 55;
  _BL_OBJECT_TYPE_CONTEXT                 = 100;
  _BL_OBJECT_TYPE_IMAGE_CODEC             = 101;
  _BL_OBJECT_TYPE_IMAGE_DECODER           = 102;
  _BL_OBJECT_TYPE_IMAGE_ENCODER           = 103;
  _BL_OBJECT_TYPE_FONT_FACE               = 104;
  _BL_OBJECT_TYPE_FONT_DATA               = 105;
  _BL_OBJECT_TYPE_FONT_MANAGER            = 106;
  _BL_OBJECT_TYPE_MIN_ARRAY               = 33;
  _BL_OBJECT_TYPE_MAX_ARRAY               = 55;
  _BL_OBJECT_TYPE_MIN_STYLE               = 0;
  _BL_OBJECT_TYPE_MAX_STYLE               = 5;
  _BL_OBJECT_TYPE_MIN_VIRTUAL             = 100;
  _BL_OBJECT_TYPE_MAX_VIRTUAL             = 127;
  _BL_OBJECT_TYPE_MAX_VALUE               = 127;

type
  _BLObjectInfo = record
    bits: UInt32;
  end;

type
  _BLObjectDetail = packed record
  case Byte of
    0: (impl: _PBLObjectImpl);
    1: (char_data: array [0..15] of UTF8Char);
    2: (i8_data: array [0..15] of Int8);
    3: (u8_data: array [0..15] of UInt8);
    4: (i16_data: array [0..7] of Int16);
    5: (u16_data: array [0..7] of UInt16);
    6: (i32_data: array [0..3] of Int32);
    7: (u32_data: array [0..3] of UInt32);
    8: (i64_data: array [0..1] of Int64);
    9: (u64_data: array [0..1] of UInt64);
   10: (f32_data: array [0..3] of Single);
   11: (f64_data: array [0..1] of Double);
   12: (rgba: _BLRgba);
   13: (rgba32: _BLRgba32);
   14: (rgba64: _BLRgba64);
   15: (u32_data_overlap: array [0..1] of UInt32;
        impl_payload: UInt32;
        info: _BLObjectInfo);
  end;

type
  _BLDestroyExternalDataFunc = procedure(impl, externalData, userData: Pointer); cdecl;

type
  _BLObjectCore = record
    _d: _BLObjectDetail;
  end;
  _PBLObjectCore = ^_BLObjectCore;

type
  { var.h }
  _BLVarCore = record
    _base: _BLObjectCore;
  end;
  _PBLVarCore = ^_BLVarCore;

type
  _BLObjectVirtBase = record
    destroy: function(impl: _PBLObjectImpl): _BLResult; cdecl;
    getProperty: function(const impl: _PBLObjectImpl; const name: PUTF8Char; nameSize: Size_T; valueOut: _PBLVarCore): _BLResult; cdecl;
    setProperty: function(impl: _PBLObjectImpl; const name: PUTF8Char; nameSize: Size_T; const value: _PBLVarCore): _BLResult; cdecl;
  end;

type
  _BLObjectVirt = record
    base: _BLObjectVirtBase;
  end;

function _blObjectAllocImpl(self: _PBLObjectCore; objectInfo: UInt32; implSize: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blObjectAllocImpl';

function _blObjectAllocImplAligned(self: _PBLObjectCore; objectInfo: UInt32; implSize: Size_T; implAlignment: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blObjectAllocImplAligned';

function _blObjectAllocImplExternal(self: _PBLObjectCore; objectInfo: UInt32; implSize: Size_T; immutable: Boolean; destroyFunc: _BLDestroyExternalDataFunc; userData: Pointer): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blObjectAllocImplExternal';

function _blObjectFreeImpl(impl: _PBLObjectImpl): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blObjectFreeImpl';

function _blObjectInitMove(self: _PBLUnknown; other: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blObjectInitMove';

function _blObjectInitWeak(self: _PBLUnknown; const other: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blObjectInitWeak';

function _blObjectReset(self: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blObjectReset';

function _blObjectAssignMove(self: _PBLUnknown; other: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blObjectAssignMove';

function _blObjectAssignWeak(self: _PBLUnknown; const other: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blObjectAssignWeak';

function _blObjectGetProperty(const self: _PBLUnknown; const name: PUTF8Char; nameSize: Size_T; valueOut: _PBLVarCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blObjectGetProperty';

function _blObjectGetPropertyBool(const self: _PBLUnknown; const name: PUTF8Char; nameSize: Size_T; valueOut: PBoolean): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blObjectGetPropertyBool';

function _blObjectGetPropertyInt32(const self: _PBLUnknown; const name: PUTF8Char; nameSize: Size_T; valueOut: PInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blObjectGetPropertyInt32';

function _blObjectGetPropertyInt64(const self: _PBLUnknown; const name: PUTF8Char; nameSize: Size_T; valueOut: PInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blObjectGetPropertyInt64';

function _blObjectGetPropertyUInt32(const self: _PBLUnknown; const name: PUTF8Char; nameSize: Size_T; valueOut: PUInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blObjectGetPropertyUInt32';

function _blObjectGetPropertyUInt64(const self: _PBLUnknown; const name: PUTF8Char; nameSize: Size_T; valueOut: PUInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blObjectGetPropertyUInt64';

function _blObjectGetPropertyDouble(const self: _PBLUnknown; const name: PUTF8Char; nameSize: Size_T; valueOut: PDouble): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blObjectGetPropertyDouble';

function _blObjectSetProperty(self: _PBLUnknown; const name: PUTF8Char; nameSize: Size_T; const value: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blObjectSetProperty';

function _blObjectSetPropertyBool(self: _PBLUnknown; const name: PUTF8Char; nameSize: Size_T; value: Boolean): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blObjectSetPropertyBool';

function _blObjectSetPropertyInt32(self: _PBLUnknown; const name: PUTF8Char; nameSize: Size_T; value: Int32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blObjectSetPropertyInt32';

function _blObjectSetPropertyInt64(self: _PBLUnknown; const name: PUTF8Char; nameSize: Size_T; value: Int64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blObjectSetPropertyInt64';

function _blObjectSetPropertyUInt32(self: _PBLUnknown; const name: PUTF8Char; nameSize: Size_T; value: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blObjectSetPropertyUInt32';

function _blObjectSetPropertyUInt64(self: _PBLUnknown; const name: PUTF8Char; nameSize: Size_T; value: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blObjectSetPropertyUInt64';

function _blObjectSetPropertyDouble(self: _PBLUnknown; const name: PUTF8Char; nameSize: Size_T; value: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blObjectSetPropertyDouble';
{$ENDREGION 'object.h'}

{$REGION 'array.h'}
type
  _BLArrayCore = record
    _base: _BLObjectCore;
  end;
  _PBLArrayCore = ^_BLArrayCore;

function _blArrayInit(self: _PBLArrayCore; arrayType: _BLObjectType): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayInit';

function _blArrayInitMove(self: _PBLArrayCore; other: _PBLArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayInitMove';

function _blArrayInitWeak(self: _PBLArrayCore; const other: _PBLArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayInitWeak';

function _blArrayDestroy(self: _PBLArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayDestroy';

function _blArrayReset(self: _PBLArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayReset';

function _blArrayGetSize(const self: _PBLArrayCore): Size_T; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayGetSize';

function _blArrayGetCapacity(const self: _PBLArrayCore): Size_T; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayGetCapacity';

function _blArrayGetItemSize(self: _PBLArrayCore): Size_T; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayGetItemSize';

function _blArrayGetData(const self: _PBLArrayCore): Pointer; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayGetData';

function _blArrayClear(self: _PBLArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayClear';

function _blArrayShrink(self: _PBLArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayShrink';

function _blArrayReserve(self: _PBLArrayCore; n: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayReserve';

function _blArrayResize(self: _PBLArrayCore; n: Size_T; const fill: Pointer): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayResize';

function _blArrayMakeMutable(self: _PBLArrayCore; dataOut: PPointer): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayMakeMutable';

function _blArrayModifyOp(self: _PBLArrayCore; op: _BLModifyOp; n: Size_T; dataOut: PPointer): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayModifyOp';

function _blArrayInsertOp(self: _PBLArrayCore; index: Size_T; n: Size_T; dataOut: PPointer): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayInsertOp';

function _blArrayAssignMove(self: _PBLArrayCore; other: _PBLArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayAssignMove';

function _blArrayAssignWeak(self: _PBLArrayCore; const other: _PBLArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayAssignWeak';

function _blArrayAssignDeep(self: _PBLArrayCore; const other: _PBLArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayAssignDeep';

function _blArrayAssignData(self: _PBLArrayCore; const data: Pointer; n: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayAssignData';

function _blArrayAssignExternalData(self: _PBLArrayCore; data: Pointer; size: Size_T; capacity: Size_T; dataAccessFlags: _BLDataAccessFlags; destroyFunc: _BLDestroyExternalDataFunc; userData: Pointer): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayAssignExternalData';

function _blArrayAppendU8(self: _PBLArrayCore; value: UInt8): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayAppendU8';

function _blArrayAppendU16(self: _PBLArrayCore; value: UInt16): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayAppendU16';

function _blArrayAppendU32(self: _PBLArrayCore; value: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayAppendU32';

function _blArrayAppendU64(self: _PBLArrayCore; value: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayAppendU64';

function _blArrayAppendF32(self: _PBLArrayCore; value: Single): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayAppendF32';

function _blArrayAppendF64(self: _PBLArrayCore; value: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayAppendF64';

function _blArrayAppendItem(self: _PBLArrayCore; const item: Pointer): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayAppendItem';

function _blArrayAppendData(self: _PBLArrayCore; const data: Pointer; n: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayAppendData';

function _blArrayInsertU8(self: _PBLArrayCore; index: Size_T; value: UInt8): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayInsertU8';

function _blArrayInsertU16(self: _PBLArrayCore; index: Size_T; value: UInt16): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayInsertU16';

function _blArrayInsertU32(self: _PBLArrayCore; index: Size_T; value: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayInsertU32';

function _blArrayInsertU64(self: _PBLArrayCore; index: Size_T; value: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayInsertU64';

function _blArrayInsertF32(self: _PBLArrayCore; index: Size_T; value: Single): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayInsertF32';

function _blArrayInsertF64(self: _PBLArrayCore; index: Size_T; value: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayInsertF64';

function _blArrayInsertItem(self: _PBLArrayCore; index: Size_T; const item: Pointer): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayInsertItem';

function _blArrayInsertData(self: _PBLArrayCore; index: Size_T; const data: Pointer; n: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayInsertData';

function _blArrayReplaceU8(self: _PBLArrayCore; index: Size_T; value: UInt8): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayReplaceU8';

function _blArrayReplaceU16(self: _PBLArrayCore; index: Size_T; value: UInt16): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayReplaceU16';

function _blArrayReplaceU32(self: _PBLArrayCore; index: Size_T; value: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayReplaceU32';

function _blArrayReplaceU64(self: _PBLArrayCore; index: Size_T; value: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayReplaceU64';

function _blArrayReplaceF32(self: _PBLArrayCore; index: Size_T; value: Single): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayReplaceF32';

function _blArrayReplaceF64(self: _PBLArrayCore; index: Size_T; value: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayReplaceF64';

function _blArrayReplaceItem(self: _PBLArrayCore; index: Size_T; const item: Pointer): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayReplaceItem';

function _blArrayReplaceData(self: _PBLArrayCore; rStart: Size_T; rEnd: Size_T; const data: Pointer; n: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayReplaceData';

function _blArrayRemoveIndex(self: _PBLArrayCore; index: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayRemoveIndex';

function _blArrayRemoveRange(self: _PBLArrayCore; rStart: Size_T; rEnd: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayRemoveRange';

function _blArrayEquals(const a: _PBLArrayCore; const b: _PBLArrayCore): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blArrayEquals';
{$ENDREGION 'array.h'}

{$REGION 'bitarray.h'}
type
  _BLBitArrayCore = record
    _base: _BLObjectCore;
  end;
  _PBLBitArrayCore = ^_BLBitArrayCore;

function _blBitArrayInit(self: _PBLBitArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayInit';

function _blBitArrayInitMove(self: _PBLBitArrayCore; other: _PBLBitArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayInitMove';

function _blBitArrayInitWeak(self: _PBLBitArrayCore; const other: _PBLBitArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayInitWeak';

function _blBitArrayDestroy(self: _PBLBitArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayDestroy';

function _blBitArrayReset(self: _PBLBitArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayReset';

function _blBitArrayAssignMove(self: _PBLBitArrayCore; other: _PBLBitArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayAssignMove';

function _blBitArrayAssignWeak(self: _PBLBitArrayCore; const other: _PBLBitArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayAssignWeak';

function _blBitArrayAssignWords(self: _PBLBitArrayCore; const wordData: PUInt32; wordCount: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayAssignWords';

function _blBitArrayIsEmpty(const self: _PBLBitArrayCore): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayIsEmpty';

function _blBitArrayGetSize(const self: _PBLBitArrayCore): UInt32; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayGetSize';

function _blBitArrayGetWordCount(const self: _PBLBitArrayCore): UInt32; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayGetWordCount';

function _blBitArrayGetCapacity(const self: _PBLBitArrayCore): UInt32; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayGetCapacity';

function _blBitArrayGetData(const self: _PBLBitArrayCore): PUInt32; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayGetData';

function _blBitArrayGetCardinality(const self: _PBLBitArrayCore): UInt32; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayGetCardinality';

function _blBitArrayGetCardinalityInRange(const self: _PBLBitArrayCore; startBit: UInt32; endBit: UInt32): UInt32; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayGetCardinalityInRange';

function _blBitArrayHasBit(const self: _PBLBitArrayCore; bitIndex: UInt32): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayHasBit';

function _blBitArrayHasBitsInRange(const self: _PBLBitArrayCore; startBit: UInt32; endBit: UInt32): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayHasBitsInRange';

function _blBitArraySubsumes(const a: _PBLBitArrayCore; const b: _PBLBitArrayCore): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArraySubsumes';

function _blBitArrayIntersects(const a: _PBLBitArrayCore; const b: _PBLBitArrayCore): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayIntersects';

function _blBitArrayGetRange(const self: _PBLBitArrayCore; startOut: PUInt32; endOut: PUInt32): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayGetRange';

function _blBitArrayEquals(const a: _PBLBitArrayCore; const b: _PBLBitArrayCore): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayEquals';

function _blBitArrayCompare(const a: _PBLBitArrayCore; const b: _PBLBitArrayCore): Integer; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayCompare';

function _blBitArrayClear(self: _PBLBitArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayClear';

function _blBitArrayResize(self: _PBLBitArrayCore; nBits: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayResize';

function _blBitArrayReserve(self: _PBLBitArrayCore; nBits: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayReserve';

function _blBitArrayShrink(self: _PBLBitArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayShrink';

function _blBitArraySetBit(self: _PBLBitArrayCore; bitIndex: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArraySetBit';

function _blBitArrayFillRange(self: _PBLBitArrayCore; startBit: UInt32; endBit: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayFillRange';

function _blBitArrayFillWords(self: _PBLBitArrayCore; bitIndex: UInt32; const wordData: PUInt32; wordCount: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayFillWords';

function _blBitArrayClearBit(self: _PBLBitArrayCore; bitIndex: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayClearBit';

function _blBitArrayClearRange(self: _PBLBitArrayCore; startBit: UInt32; endBit: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayClearRange';

function _blBitArrayClearWord(self: _PBLBitArrayCore; bitIndex: UInt32; wordValue: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayClearWord';

function _blBitArrayClearWords(self: _PBLBitArrayCore; bitIndex: UInt32; const wordData: PUInt32; wordCount: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayClearWords';

function _blBitArrayReplaceOp(self: _PBLBitArrayCore; nBits: UInt32; dataOut: PPUInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayReplaceOp';

function _blBitArrayReplaceBit(self: _PBLBitArrayCore; bitIndex: UInt32; bitValue: Boolean): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayReplaceBit';

function _blBitArrayReplaceWord(self: _PBLBitArrayCore; bitIndex: UInt32; wordValue: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayReplaceWord';

function _blBitArrayReplaceWords(self: _PBLBitArrayCore; bitIndex: UInt32; const wordData: PUInt32; wordCount: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayReplaceWords';

function _blBitArrayAppendBit(self: _PBLBitArrayCore; bitValue: Boolean): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayAppendBit';

function _blBitArrayAppendWord(self: _PBLBitArrayCore; wordValue: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayAppendWord';

function _blBitArrayAppendWords(self: _PBLBitArrayCore; const wordData: PUInt32; wordCount: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitArrayAppendWords';
{$ENDREGION 'bitarray.h'}

{$REGION 'bitset.h'}
type
  _BLBitSetConstants = Integer;

const
  _BL_BIT_SET_INVALID_INDEX      = $FFFFFFFF;
  _BL_BIT_SET_RANGE_MASK         = $80000000;
  _BL_BIT_SET_SEGMENT_WORD_COUNT = 4;

type
  _BLBitSetSegment = record
    _startWord: UInt32;
    _data: array [0.._BL_BIT_SET_SEGMENT_WORD_COUNT - 1] of UInt32;
  end;
  _PBLBitSetSegment = ^_BLBitSetSegment;

type
  _BLBitSetData = record
    segmentData: _PBLBitSetSegment;
    segmentCount: UInt32;
    ssoSegments: array [0..2] of _BLBitSetSegment;
  end;
  _PBLBitSetData = ^_BLBitSetData;

type
  _BLBitSetCore = record
    _base: _BLObjectCore;
  end;
  _PBLBitSetCore = ^_BLBitSetCore;

type
  _BLBitSetBuilderCore = record
    _areaShift: UInt32;
    _areaIndex: UInt32;
  end;
  _PBLBitSetBuilderCore = ^_BLBitSetBuilderCore;

function _blBitSetInit(self: _PBLBitSetCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetInit';

function _blBitSetInitMove(self: _PBLBitSetCore; other: _PBLBitSetCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetInitMove';

function _blBitSetInitWeak(self: _PBLBitSetCore; const other: _PBLBitSetCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetInitWeak';

function _blBitSetInitRange(self: _PBLBitSetCore; startBit: UInt32; endBit: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetInitRange';

function _blBitSetDestroy(self: _PBLBitSetCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetDestroy';

function _blBitSetReset(self: _PBLBitSetCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetReset';

function _blBitSetAssignMove(self: _PBLBitSetCore; other: _PBLBitSetCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetAssignMove';

function _blBitSetAssignWeak(self: _PBLBitSetCore; const other: _PBLBitSetCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetAssignWeak';

function _blBitSetAssignDeep(self: _PBLBitSetCore; const other: _PBLBitSetCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetAssignDeep';

function _blBitSetAssignRange(self: _PBLBitSetCore; startBit: UInt32; endBit: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetAssignRange';

function _blBitSetAssignWords(self: _PBLBitSetCore; startWord: UInt32; const wordData: PUInt32; wordCount: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetAssignWords';

function _blBitSetIsEmpty(const self: _PBLBitSetCore): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetIsEmpty';

function _blBitSetGetData(const self: _PBLBitSetCore; &out: _PBLBitSetData): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetGetData';

function _blBitSetGetSegmentCount(const self: _PBLBitSetCore): UInt32; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetGetSegmentCount';

function _blBitSetGetSegmentCapacity(const self: _PBLBitSetCore): UInt32; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetGetSegmentCapacity';

function _blBitSetGetCardinality(const self: _PBLBitSetCore): UInt32; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetGetCardinality';

function _blBitSetGetCardinalityInRange(const self: _PBLBitSetCore; startBit: UInt32; endBit: UInt32): UInt32; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetGetCardinalityInRange';

function _blBitSetHasBit(const self: _PBLBitSetCore; bitIndex: UInt32): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetHasBit';

function _blBitSetHasBitsInRange(const self: _PBLBitSetCore; startBit: UInt32; endBit: UInt32): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetHasBitsInRange';

function _blBitSetSubsumes(const a: _PBLBitSetCore; const b: _PBLBitSetCore): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetSubsumes';

function _blBitSetIntersects(const a: _PBLBitSetCore; const b: _PBLBitSetCore): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetIntersects';

function _blBitSetGetRange(const self: _PBLBitSetCore; startOut: PUInt32; endOut: PUInt32): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetGetRange';

function _blBitSetEquals(const a: _PBLBitSetCore; const b: _PBLBitSetCore): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetEquals';

function _blBitSetCompare(const a: _PBLBitSetCore; const b: _PBLBitSetCore): Integer; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetCompare';

function _blBitSetClear(self: _PBLBitSetCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetClear';

function _blBitSetShrink(self: _PBLBitSetCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetShrink';

function _blBitSetOptimize(self: _PBLBitSetCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetOptimize';

function _blBitSetChop(self: _PBLBitSetCore; startBit: UInt32; endBit: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetChop';

function _blBitSetAddBit(self: _PBLBitSetCore; bitIndex: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetAddBit';

function _blBitSetAddRange(self: _PBLBitSetCore; rangeStartBit: UInt32; rangeEndBit: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetAddRange';

function _blBitSetAddWords(self: _PBLBitSetCore; startWord: UInt32; const wordData: PUInt32; wordCount: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetAddWords';

function _blBitSetClearBit(self: _PBLBitSetCore; bitIndex: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetClearBit';

function _blBitSetClearRange(self: _PBLBitSetCore; rangeStartBit: UInt32; rangeEndBit: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetClearRange';

function _blBitSetBuilderCommit(self: _PBLBitSetCore; builder: _PBLBitSetBuilderCore; newAreaIndex: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetBuilderCommit';

function _blBitSetBuilderAddRange(self: _PBLBitSetCore; builder: _PBLBitSetBuilderCore; startBit: UInt32; endBit: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blBitSetBuilderAddRange';
{$ENDREGION 'bitset.h'}

{$REGION 'geometry.h'}
type
  _BLGeometryDirection = Integer;

const
  _BL_GEOMETRY_DIRECTION_NONE = 0;
  _BL_GEOMETRY_DIRECTION_CW   = 1;
  _BL_GEOMETRY_DIRECTION_CCW  = 2;

type
  _BLGeometryType = Integer;

const
  _BL_GEOMETRY_TYPE_NONE             = 0;
  _BL_GEOMETRY_TYPE_BOXI             = 1;
  _BL_GEOMETRY_TYPE_BOXD             = 2;
  _BL_GEOMETRY_TYPE_RECTI            = 3;
  _BL_GEOMETRY_TYPE_RECTD            = 4;
  _BL_GEOMETRY_TYPE_CIRCLE           = 5;
  _BL_GEOMETRY_TYPE_ELLIPSE          = 6;
  _BL_GEOMETRY_TYPE_ROUND_RECT       = 7;
  _BL_GEOMETRY_TYPE_ARC              = 8;
  _BL_GEOMETRY_TYPE_CHORD            = 9;
  _BL_GEOMETRY_TYPE_PIE              = 10;
  _BL_GEOMETRY_TYPE_LINE             = 11;
  _BL_GEOMETRY_TYPE_TRIANGLE         = 12;
  _BL_GEOMETRY_TYPE_POLYLINEI        = 13;
  _BL_GEOMETRY_TYPE_POLYLINED        = 14;
  _BL_GEOMETRY_TYPE_POLYGONI         = 15;
  _BL_GEOMETRY_TYPE_POLYGOND         = 16;
  _BL_GEOMETRY_TYPE_ARRAY_VIEW_BOXI  = 17;
  _BL_GEOMETRY_TYPE_ARRAY_VIEW_BOXD  = 18;
  _BL_GEOMETRY_TYPE_ARRAY_VIEW_RECTI = 19;
  _BL_GEOMETRY_TYPE_ARRAY_VIEW_RECTD = 20;
  _BL_GEOMETRY_TYPE_PATH             = 21;
  _BL_GEOMETRY_TYPE_MAX_VALUE        = 21;
  _BL_GEOMETRY_TYPE_SIMPLE_LAST      = 12;

type
  _BLFillRule = Integer;

const
  _BL_FILL_RULE_NON_ZERO  = 0;
  _BL_FILL_RULE_EVEN_ODD  = 1;
  _BL_FILL_RULE_MAX_VALUE = 1;

type
  _BLHitTest = Integer;

const
  _BL_HIT_TEST_IN      = 0;
  _BL_HIT_TEST_PART    = 1;
  _BL_HIT_TEST_OUT     = 2;
  _BL_HIT_TEST_INVALID = -1;

type
  _BLPointI = record
    x: Integer;
    y: Integer;
  end;
  _PBLPointI = ^_BLPointI;

type
  _BLSizeI = record
    w: Integer;
    h: Integer;
  end;
  _PBLSizeI = ^_BLSizeI;

type
  _BLBoxI = record
    x0: Integer;
    y0: Integer;
    x1: Integer;
    y1: Integer;
  end;
  _PBLBoxI = ^_BLBoxI;

type
  _BLRectI = record
    x: Integer;
    y: Integer;
    w: Integer;
    h: Integer;
  end;
  _PBLRectI = ^_BLRectI;

type
  _BLPoint = record
    x: Double;
    y: Double;
  end;
  _PBLPoint = ^_BLPoint;
  _PPBLPoint = ^_PBLPoint;

type
  _BLSize = record
    w: Double;
    h: Double;
  end;
  _PBLSize = ^_BLSize;

type
  _BLBox = record
    x0: Double;
    y0: Double;
    x1: Double;
    y1: Double;
  end;
  _PBLBox = ^_BLBox;

type
  _BLRect = record
    x: Double;
    y: Double;
    w: Double;
    h: Double;
  end;
  _PBLRect = ^_BLRect;

type
  _BLLine = record
    x0: Double;
    y0: Double;
    x1: Double;
    y1: Double;
  end;
  _PBLLine = ^_BLLine;

type
  _BLTriangle = record
    x0: Double;
    y0: Double;
    x1: Double;
    y1: Double;
    x2: Double;
    y2: Double;
  end;
  _PBLTriangle = ^_BLTriangle;

type
  _BLRoundRect = record
    x: Double;
    y: Double;
    w: Double;
    h: Double;
    rx: Double;
    ry: Double;
  end;
  _PBLRoundRect = ^_BLRoundRect;

type
  _BLCircle = record
    cx: Double;
    cy: Double;
    r: Double;
  end;
  _PBLCircle = ^_BLCircle;

type
  _BLEllipse = record
    cx: Double;
    cy: Double;
    rx: Double;
    ry: Double;
  end;
  _PBLEllipse = ^_BLEllipse;

type
  _BLArc = record
    cx: Double;
    cy: Double;
    rx: Double;
    ry: Double;
    start: Double;
    sweep: Double;
  end;
  _PBLArc = ^_BLArc;
{$ENDREGION 'geometry.h'}

{$REGION 'format.h'}
type
  _BLFormat = Integer;

const
  _BL_FORMAT_NONE      = 0;
  _BL_FORMAT_PRGB32    = 1;
  _BL_FORMAT_XRGB32    = 2;
  _BL_FORMAT_A8        = 3;
  _BL_FORMAT_MAX_VALUE = 3;

type
  _BLFormatFlags = Integer;

const
  _BL_FORMAT_NO_FLAGS            = 0;
  _BL_FORMAT_FLAG_RGB            = $00000001;
  _BL_FORMAT_FLAG_ALPHA          = $00000002;
  _BL_FORMAT_FLAG_RGBA           = $00000003;
  _BL_FORMAT_FLAG_LUM            = $00000004;
  _BL_FORMAT_FLAG_LUMA           = $00000006;
  _BL_FORMAT_FLAG_INDEXED        = $00000010;
  _BL_FORMAT_FLAG_PREMULTIPLIED  = $00000100;
  _BL_FORMAT_FLAG_BYTE_SWAP      = $00000200;
  _BL_FORMAT_FLAG_BYTE_ALIGNED   = $00010000;
  _BL_FORMAT_FLAG_UNDEFINED_BITS = $00020000;
  _BL_FORMAT_FLAG_LE             = 0;
  _BL_FORMAT_FLAG_BE             = _BL_FORMAT_FLAG_BYTE_SWAP;

type
  _BLFormatInfo = packed record
    depth: UInt32;
    flags: _BLFormatFlags;
    case Byte of
      0: (sizes: array [0..3] of Byte;
          shifts: array [0..3] of Byte);
      1: (rSize: Byte;
          gSize: Byte;
          bSize: Byte;
          aSize: Byte;
          rShift: Byte;
          gShift: Byte;
          bShift: Byte;
          aShift: Byte);
      2: (palette: _PBLRgba32);
  end;
  _PBLFormatInfo = ^_BLFormatInfo;

function _blFormatInfoQuery(self: _PBLFormatInfo; format: _BLFormat): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFormatInfoQuery';

function _blFormatInfoSanitize(self: _PBLFormatInfo): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFormatInfoSanitize';
{$ENDREGION 'format.h'}

{$REGION 'image.h'}
type
  _BLImageInfoFlags = Integer;

const
  _BL_IMAGE_INFO_FLAG_NO_FLAGS    = 0;
  _BL_IMAGE_INFO_FLAG_PROGRESSIVE = 1;

type
  _BLImageScaleFilter = Integer;

const
  _BL_IMAGE_SCALE_FILTER_NONE      = 0;
  _BL_IMAGE_SCALE_FILTER_NEAREST   = 1;
  _BL_IMAGE_SCALE_FILTER_BILINEAR  = 2;
  _BL_IMAGE_SCALE_FILTER_BICUBIC   = 3;
  _BL_IMAGE_SCALE_FILTER_LANCZOS   = 4;
  _BL_IMAGE_SCALE_FILTER_MAX_VALUE = 4;

type
  _BLImageData = record
    pixelData: Pointer;
    stride: IntPtr;
    size: _BLSizeI;
    format: UInt32;
    flags: UInt32;
  end;
  _PBLImageData = ^_BLImageData;

type
  _BLImageInfo = record
    size: _BLSizeI;
    density: _BLSize;
    flags: UInt32;
    depth: UInt16;
    planeCount: UInt16;
    frameCount: UInt64;
    repeatCount: UInt32;
    reserved: array [0..2] of UInt32;
    format: array [0..15] of UTF8Char;
    compression: array [0..15] of UTF8Char;
  end;
  _PBLImageInfo = ^_BLImageInfo;

type
  _BLImageCore = record
    _base: _BLObjectCore;
  end;
  _PBLImageCore = ^_BLImageCore;

type
  { imagecodec.h }
  _BLImageCodecCore = record
    _base: _BLObjectCore;
  end;
  _PBLImageCodecCore = ^_BLImageCodecCore;

function _blImageInit(self: _PBLImageCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageInit';

function _blImageInitMove(self: _PBLImageCore; other: _PBLImageCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageInitMove';

function _blImageInitWeak(self: _PBLImageCore; const other: _PBLImageCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageInitWeak';

function _blImageInitAs(self: _PBLImageCore; w: Integer; h: Integer; format: _BLFormat): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageInitAs';

function _blImageInitAsFromData(self: _PBLImageCore; w: Integer; h: Integer; format: _BLFormat; pixelData: Pointer; stride: IntPtr; accessFlags: _BLDataAccessFlags; destroyFunc: _BLDestroyExternalDataFunc; userData: Pointer): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageInitAsFromData';

function _blImageDestroy(self: _PBLImageCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageDestroy';

function _blImageReset(self: _PBLImageCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageReset';

function _blImageAssignMove(self: _PBLImageCore; other: _PBLImageCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageAssignMove';

function _blImageAssignWeak(self: _PBLImageCore; const other: _PBLImageCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageAssignWeak';

function _blImageAssignDeep(self: _PBLImageCore; const other: _PBLImageCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageAssignDeep';

function _blImageCreate(self: _PBLImageCore; w: Integer; h: Integer; format: _BLFormat): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageCreate';

function _blImageCreateFromData(self: _PBLImageCore; w: Integer; h: Integer; format: _BLFormat; pixelData: Pointer; stride: IntPtr; accessFlags: _BLDataAccessFlags; destroyFunc: _BLDestroyExternalDataFunc; userData: Pointer): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageCreateFromData';

function _blImageGetData(const self: _PBLImageCore; dataOut: _PBLImageData): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageGetData';

function _blImageMakeMutable(self: _PBLImageCore; dataOut: _PBLImageData): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageMakeMutable';

function _blImageConvert(self: _PBLImageCore; format: _BLFormat): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageConvert';

function _blImageEquals(const a: _PBLImageCore; const b: _PBLImageCore): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageEquals';

function _blImageScale(dst: _PBLImageCore; const src: _PBLImageCore; const size: _PBLSizeI; filter: _BLImageScaleFilter): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageScale';

function _blImageReadFromFile(self: _PBLImageCore; const fileName: PUTF8Char; const codecs: _PBLArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageReadFromFile';

function _blImageReadFromData(self: _PBLImageCore; const data: Pointer; size: Size_T; const codecs: _PBLArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageReadFromData';

function _blImageWriteToFile(const self: _PBLImageCore; const fileName: PUTF8Char; const codec: _PBLImageCodecCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageWriteToFile';

function _blImageWriteToData(const self: _PBLImageCore; dst: _PBLArrayCore; const codec: _PBLImageCodecCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageWriteToData';
{$ENDREGION 'image.h'}

{$REGION 'imagedecoder.h'}
type
  _BLImageDecoderCore = record
    _base: _BLObjectCore;
  end;
  _PBLImageDecoderCore = ^_BLImageDecoderCore;

function _blImageDecoderInit(self: _PBLImageDecoderCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageDecoderInit';

function _blImageDecoderInitMove(self: _PBLImageDecoderCore; other: _PBLImageDecoderCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageDecoderInitMove';

function _blImageDecoderInitWeak(self: _PBLImageDecoderCore; const other: _PBLImageDecoderCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageDecoderInitWeak';

function _blImageDecoderDestroy(self: _PBLImageDecoderCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageDecoderDestroy';

function _blImageDecoderReset(self: _PBLImageDecoderCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageDecoderReset';

function _blImageDecoderAssignMove(self: _PBLImageDecoderCore; other: _PBLImageDecoderCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageDecoderAssignMove';

function _blImageDecoderAssignWeak(self: _PBLImageDecoderCore; const other: _PBLImageDecoderCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageDecoderAssignWeak';

function _blImageDecoderRestart(self: _PBLImageDecoderCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageDecoderRestart';

function _blImageDecoderReadInfo(self: _PBLImageDecoderCore; infoOut: _PBLImageInfo; const data: PUInt8; size: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageDecoderReadInfo';

function _blImageDecoderReadFrame(self: _PBLImageDecoderCore; imageOut: _PBLImageCore; const data: PUInt8; size: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageDecoderReadFrame';
{$ENDREGION 'imagedecoder.h'}

{$REGION 'imageencoder.h'}
type
  _BLImageEncoderCore = record
    _base: _BLObjectCore;
  end;
  _PBLImageEncoderCore = ^_BLImageEncoderCore;

function _blImageEncoderInit(self: _PBLImageEncoderCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageEncoderInit';

function _blImageEncoderInitMove(self: _PBLImageEncoderCore; other: _PBLImageEncoderCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageEncoderInitMove';

function _blImageEncoderInitWeak(self: _PBLImageEncoderCore; const other: _PBLImageEncoderCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageEncoderInitWeak';

function _blImageEncoderDestroy(self: _PBLImageEncoderCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageEncoderDestroy';

function _blImageEncoderReset(self: _PBLImageEncoderCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageEncoderReset';

function _blImageEncoderAssignMove(self: _PBLImageEncoderCore; other: _PBLImageEncoderCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageEncoderAssignMove';

function _blImageEncoderAssignWeak(self: _PBLImageEncoderCore; const other: _PBLImageEncoderCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageEncoderAssignWeak';

function _blImageEncoderRestart(self: _PBLImageEncoderCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageEncoderRestart';

function _blImageEncoderWriteFrame(self: _PBLImageEncoderCore; dst: _PBLArrayCore; const image: _PBLImageCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageEncoderWriteFrame';
{$ENDREGION 'imageencoder.h'}

{$REGION 'imagecodec.h'}
function _blImageCodecInit(self: _PBLImageCodecCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageCodecInit';

function _blImageCodecInitMove(self: _PBLImageCodecCore; other: _PBLImageCodecCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageCodecInitMove';

function _blImageCodecInitWeak(self: _PBLImageCodecCore; const other: _PBLImageCodecCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageCodecInitWeak';

function _blImageCodecInitByName(self: _PBLImageCodecCore; const name: PUTF8Char; size: Size_T; const codecs: _PBLArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageCodecInitByName';

function _blImageCodecDestroy(self: _PBLImageCodecCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageCodecDestroy';

function _blImageCodecReset(self: _PBLImageCodecCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageCodecReset';

function _blImageCodecAssignMove(self: _PBLImageCodecCore; other: _PBLImageCodecCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageCodecAssignMove';

function _blImageCodecAssignWeak(self: _PBLImageCodecCore; const other: _PBLImageCodecCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageCodecAssignWeak';

function _blImageCodecFindByName(self: _PBLImageCodecCore; const name: PUTF8Char; size: Size_T; const codecs: _PBLArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageCodecFindByName';

function _blImageCodecFindByExtension(self: _PBLImageCodecCore; const name: PUTF8Char; size: Size_T; const codecs: _PBLArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageCodecFindByExtension';

function _blImageCodecFindByData(self: _PBLImageCodecCore; const data: Pointer; size: Size_T; const codecs: _PBLArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageCodecFindByData';

function _blImageCodecInspectData(const self: _PBLImageCodecCore; const data: Pointer; size: Size_T): UInt32; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageCodecInspectData';

function _blImageCodecCreateDecoder(const self: _PBLImageCodecCore; dst: _PBLImageDecoderCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageCodecCreateDecoder';

function _blImageCodecCreateEncoder(const self: _PBLImageCodecCore; dst: _PBLImageEncoderCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageCodecCreateEncoder';

function _blImageCodecArrayInitBuiltInCodecs(self: _PBLArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageCodecArrayInitBuiltInCodecs';

function _blImageCodecArrayAssignBuiltInCodecs(self: _PBLArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageCodecArrayAssignBuiltInCodecs';

function _blImageCodecAddToBuiltIn(const codec: _PBLImageCodecCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageCodecAddToBuiltIn';

function _blImageCodecRemoveFromBuiltIn(const codec: _PBLImageCodecCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blImageCodecRemoveFromBuiltIn';

type
  _BLImageCodecFeatures = Integer;

const
  _BL_IMAGE_CODEC_NO_FEATURES         = 0;
  _BL_IMAGE_CODEC_FEATURE_READ        = $00000001;
  _BL_IMAGE_CODEC_FEATURE_WRITE       = $00000002;
  _BL_IMAGE_CODEC_FEATURE_LOSSLESS    = $00000004;
  _BL_IMAGE_CODEC_FEATURE_LOSSY       = $00000008;
  _BL_IMAGE_CODEC_FEATURE_MULTI_FRAME = $00000010;
  _BL_IMAGE_CODEC_FEATURE_IPTC        = $10000000;
  _BL_IMAGE_CODEC_FEATURE_EXIF        = $20000000;
  _BL_IMAGE_CODEC_FEATURE_XMP         = $40000000;
{$ENDREGION 'imagecodec.h'}

{$REGION 'matrix.h'}
type
  _BLTransformType = Integer;

const
  _BL_TRANSFORM_TYPE_IDENTITY  = 0;
  _BL_TRANSFORM_TYPE_TRANSLATE = 1;
  _BL_TRANSFORM_TYPE_SCALE     = 2;
  _BL_TRANSFORM_TYPE_SWAP      = 3;
  _BL_TRANSFORM_TYPE_AFFINE    = 4;
  _BL_TRANSFORM_TYPE_INVALID   = 5;
  _BL_TRANSFORM_TYPE_MAX_VALUE = 5;

type
  _BLTransformOp = Integer;

const
  _BL_TRANSFORM_OP_RESET          = 0;
  _BL_TRANSFORM_OP_ASSIGN         = 1;
  _BL_TRANSFORM_OP_TRANSLATE      = 2;
  _BL_TRANSFORM_OP_SCALE          = 3;
  _BL_TRANSFORM_OP_SKEW           = 4;
  _BL_TRANSFORM_OP_ROTATE         = 5;
  _BL_TRANSFORM_OP_ROTATE_PT      = 6;
  _BL_TRANSFORM_OP_TRANSFORM      = 7;
  _BL_TRANSFORM_OP_POST_TRANSLATE = 8;
  _BL_TRANSFORM_OP_POST_SCALE     = 9;
  _BL_TRANSFORM_OP_POST_SKEW      = 10;
  _BL_TRANSFORM_OP_POST_ROTATE    = 11;
  _BL_TRANSFORM_OP_POST_ROTATE_PT = 12;
  _BL_TRANSFORM_OP_POST_TRANSFORM = 13;
  _BL_TRANSFORM_OP_MAX_VALUE      = 13;

type
  _BLMatrix2D = record
  case Byte of
    0: (m: array [0..5] of Double);
    1: (m00: Double;
        m01: Double;
        m10: Double;
        m11: Double;
        m20: Double;
        m21: Double);
  end;
  _PBLMatrix2D = ^_BLMatrix2D;

function _blMatrix2DSetIdentity(self: _PBLMatrix2D): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blMatrix2DSetIdentity';

function _blMatrix2DSetTranslation(self: _PBLMatrix2D; x: Double; y: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blMatrix2DSetTranslation';

function _blMatrix2DSetScaling(self: _PBLMatrix2D; x: Double; y: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blMatrix2DSetScaling';

function _blMatrix2DSetSkewing(self: _PBLMatrix2D; x: Double; y: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blMatrix2DSetSkewing';

function _blMatrix2DSetRotation(self: _PBLMatrix2D; angle: Double; cx: Double; cy: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blMatrix2DSetRotation';

function _blMatrix2DApplyOp(self: _PBLMatrix2D; opType: _BLTransformOp; const opData: Pointer): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blMatrix2DApplyOp';

function _blMatrix2DInvert(dst: _PBLMatrix2D; const src: _PBLMatrix2D): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blMatrix2DInvert';

function _blMatrix2DGetType(const self: _PBLMatrix2D): _BLTransformType; cdecl;
  external _LIB_BLEND2D name _PU + 'blMatrix2DGetType';

function _blMatrix2DMapPointDArray(const self: _PBLMatrix2D; dst: _PBLPoint; const src: _PBLPoint; count: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blMatrix2DMapPointDArray';
{$ENDREGION 'matrix.h'}

{$REGION 'path.h'}
type
  _BLPathCmd = Integer;

const
  _BL_PATH_CMD_MOVE      = 0;
  _BL_PATH_CMD_ON        = 1;
  _BL_PATH_CMD_QUAD      = 2;
  _BL_PATH_CMD_CONIC     = 3;
  _BL_PATH_CMD_CUBIC     = 4;
  _BL_PATH_CMD_CLOSE     = 5;
  _BL_PATH_CMD_WEIGHT    = 6;
  _BL_PATH_CMD_MAX_VALUE = 6;

type
  _BLPathCmdExtra = Integer;

const
  _BL_PATH_CMD_PRESERVE = $FFFFFFFF;

type
  _BLPathFlags = Integer;

const
  _BL_PATH_NO_FLAGS      = 0;
  _BL_PATH_FLAG_EMPTY    = $00000001;
  _BL_PATH_FLAG_MULTIPLE = $00000002;
  _BL_PATH_FLAG_QUADS    = $00000004;
  _BL_PATH_FLAG_CONICS   = $00000008;
  _BL_PATH_FLAG_CUBICS   = $00000010;
  _BL_PATH_FLAG_INVALID  = $40000000;
  _BL_PATH_FLAG_DIRTY    = $80000000;

type
  _BLPathReverseMode = Integer;

const
  _BL_PATH_REVERSE_MODE_COMPLETE  = 0;
  _BL_PATH_REVERSE_MODE_SEPARATE  = 1;
  _BL_PATH_REVERSE_MODE_MAX_VALUE = 1;

type
  _BLStrokeJoin = Integer;

const
  _BL_STROKE_JOIN_MITER_CLIP  = 0;
  _BL_STROKE_JOIN_MITER_BEVEL = 1;
  _BL_STROKE_JOIN_MITER_ROUND = 2;
  _BL_STROKE_JOIN_BEVEL       = 3;
  _BL_STROKE_JOIN_ROUND       = 4;
  _BL_STROKE_JOIN_MAX_VALUE   = 4;

type
  _BLStrokeCapPosition = Integer;

const
  _BL_STROKE_CAP_POSITION_START     = 0;
  _BL_STROKE_CAP_POSITION_END       = 1;
  _BL_STROKE_CAP_POSITION_MAX_VALUE = 1;

type
  _BLStrokeCap = Integer;

const
  _BL_STROKE_CAP_BUTT         = 0;
  _BL_STROKE_CAP_SQUARE       = 1;
  _BL_STROKE_CAP_ROUND        = 2;
  _BL_STROKE_CAP_ROUND_REV    = 3;
  _BL_STROKE_CAP_TRIANGLE     = 4;
  _BL_STROKE_CAP_TRIANGLE_REV = 5;
  _BL_STROKE_CAP_MAX_VALUE    = 5;

type
  _BLStrokeTransformOrder = Integer;

const
  _BL_STROKE_TRANSFORM_ORDER_AFTER     = 0;
  _BL_STROKE_TRANSFORM_ORDER_BEFORE    = 1;
  _BL_STROKE_TRANSFORM_ORDER_MAX_VALUE = 1;

type
  _BLFlattenMode = Integer;

const
  _BL_FLATTEN_MODE_DEFAULT   = 0;
  _BL_FLATTEN_MODE_RECURSIVE = 1;
  _BL_FLATTEN_MODE_MAX_VALUE = 1;

type
  _BLOffsetMode = Integer;

const
  _BL_OFFSET_MODE_DEFAULT   = 0;
  _BL_OFFSET_MODE_ITERATIVE = 1;
  _BL_OFFSET_MODE_MAX_VALUE = 1;

type
  _BLApproximationOptions = record
    flattenMode: UInt8;
    offsetMode: UInt8;
    reservedFlags: array [0..5] of UInt8;
    flattenTolerance: Double;
    simplifyTolerance: Double;
    offsetParameter: Double;
  end;
  _PBLApproximationOptions = ^_BLApproximationOptions;

type
  _BLPathView = record
    commandData: PUInt8;
    vertexData: _PBLPoint;
    size: Size_T;
  end;

type
  _BLPathCore = record
    _base: _BLObjectCore;
  end;
  _PBLPathCore = ^_BLPathCore;

type
  _BLPathSinkFunc = function(path: _PBLPathCore; const info: Pointer; userData: Pointer): _BLResult; cdecl;

type
  _BLPathStrokeSinkFunc = function(a: _PBLPathCore; b: _PBLPathCore; c: _PBLPathCore; inputStart: Size_T; inputEnd: Size_T; userData: Pointer): _BLResult; cdecl;

type
  _BLStrokeOptionsCore = packed record
    opts: record
            case Byte of
              0: (startCap: UInt8;
                  endCap: UInt8;
                  join: UInt8;
                  transformOrder: UInt8;
                  reserved: array [0..3] of UInt8);
              1: (caps: array [0.._BL_STROKE_CAP_POSITION_MAX_VALUE] of Byte);
              2: (hints: UInt64);
          end;
    width: Double;
    miterLimit: Double;
    dashOffset: Double;
    dashArray: _BLArrayCore;
  end;
  _PBLStrokeOptionsCore = ^_BLStrokeOptionsCore;

function _blPathInit(self: _PBLPathCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathInit';

function _blPathInitMove(self: _PBLPathCore; other: _PBLPathCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathInitMove';

function _blPathInitWeak(self: _PBLPathCore; const other: _PBLPathCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathInitWeak';

function _blPathDestroy(self: _PBLPathCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathDestroy';

function _blPathReset(self: _PBLPathCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathReset';

function _blPathGetSize(const self: _PBLPathCore): Size_T; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathGetSize';

function _blPathGetCapacity(const self: _PBLPathCore): Size_T; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathGetCapacity';

function _blPathGetCommandData(const self: _PBLPathCore): PUInt8; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathGetCommandData';

function _blPathGetVertexData(const self: _PBLPathCore): _PBLPoint; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathGetVertexData';

function _blPathClear(self: _PBLPathCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathClear';

function _blPathShrink(self: _PBLPathCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathShrink';

function _blPathReserve(self: _PBLPathCore; n: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathReserve';

function _blPathModifyOp(self: _PBLPathCore; op: _BLModifyOp; n: Size_T; cmdDataOut: PPUInt8; vtxDataOut: _PPBLPoint): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathModifyOp';

function _blPathAssignMove(self: _PBLPathCore; other: _PBLPathCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathAssignMove';

function _blPathAssignWeak(self: _PBLPathCore; const other: _PBLPathCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathAssignWeak';

function _blPathAssignDeep(self: _PBLPathCore; const other: _PBLPathCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathAssignDeep';

function _blPathSetVertexAt(self: _PBLPathCore; index: Size_T; cmd: UInt32; x: Double; y: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathSetVertexAt';

function _blPathMoveTo(self: _PBLPathCore; x0: Double; y0: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathMoveTo';

function _blPathLineTo(self: _PBLPathCore; x1: Double; y1: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathLineTo';

function _blPathPolyTo(self: _PBLPathCore; const poly: _PBLPoint; count: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathPolyTo';

function _blPathQuadTo(self: _PBLPathCore; x1: Double; y1: Double; x2: Double; y2: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathQuadTo';

function _blPathConicTo(self: _PBLPathCore; x1: Double; y1: Double; x2: Double; y2: Double; w: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathConicTo';

function _blPathCubicTo(self: _PBLPathCore; x1: Double; y1: Double; x2: Double; y2: Double; x3: Double; y3: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathCubicTo';

function _blPathSmoothQuadTo(self: _PBLPathCore; x2: Double; y2: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathSmoothQuadTo';

function _blPathSmoothCubicTo(self: _PBLPathCore; x2: Double; y2: Double; x3: Double; y3: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathSmoothCubicTo';

function _blPathArcTo(self: _PBLPathCore; x: Double; y: Double; rx: Double; ry: Double; start: Double; sweep: Double; forceMoveTo: Boolean): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathArcTo';

function _blPathArcQuadrantTo(self: _PBLPathCore; x1: Double; y1: Double; x2: Double; y2: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathArcQuadrantTo';

function _blPathEllipticArcTo(self: _PBLPathCore; rx: Double; ry: Double; xAxisRotation: Double; largeArcFlag: Boolean; sweepFlag: Boolean; x1: Double; y1: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathEllipticArcTo';

function _blPathClose(self: _PBLPathCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathClose';

function _blPathAddGeometry(self: _PBLPathCore; geometryType: _BLGeometryType; const geometryData: Pointer; const m: _PBLMatrix2D; dir: _BLGeometryDirection): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathAddGeometry';

function _blPathAddBoxI(self: _PBLPathCore; const box: _PBLBoxI; dir: _BLGeometryDirection): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathAddBoxI';

function _blPathAddBoxD(self: _PBLPathCore; const box: _PBLBox; dir: _BLGeometryDirection): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathAddBoxD';

function _blPathAddRectI(self: _PBLPathCore; const rect: _PBLRectI; dir: _BLGeometryDirection): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathAddRectI';

function _blPathAddRectD(self: _PBLPathCore; const rect: _PBLRect; dir: _BLGeometryDirection): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathAddRectD';

function _blPathAddPath(self: _PBLPathCore; const other: _PBLPathCore; const range: _PBLRange): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathAddPath';

function _blPathAddTranslatedPath(self: _PBLPathCore; const other: _PBLPathCore; const range: _PBLRange; const p: _PBLPoint): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathAddTranslatedPath';

function _blPathAddTransformedPath(self: _PBLPathCore; const other: _PBLPathCore; const range: _PBLRange; const m: _PBLMatrix2D): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathAddTransformedPath';

function _blPathAddReversedPath(self: _PBLPathCore; const other: _PBLPathCore; const range: _PBLRange; reverseMode: _BLPathReverseMode): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathAddReversedPath';

function _blPathAddStrokedPath(self: _PBLPathCore; const other: _PBLPathCore; const range: _PBLRange; const options: _PBLStrokeOptionsCore; const approx: _PBLApproximationOptions): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathAddStrokedPath';

function _blPathRemoveRange(self: _PBLPathCore; const range: _PBLRange): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathRemoveRange';

function _blPathTranslate(self: _PBLPathCore; const range: _PBLRange; const p: _PBLPoint): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathTranslate';

function _blPathTransform(self: _PBLPathCore; const range: _PBLRange; const m: _PBLMatrix2D): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathTransform';

function _blPathFitTo(self: _PBLPathCore; const range: _PBLRange; const rect: _PBLRect; fitFlags: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathFitTo';

function _blPathEquals(const a: _PBLPathCore; const b: _PBLPathCore): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathEquals';

function _blPathGetInfoFlags(const self: _PBLPathCore; flagsOut: PUInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathGetInfoFlags';

function _blPathGetControlBox(const self: _PBLPathCore; boxOut: _PBLBox): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathGetControlBox';

function _blPathGetBoundingBox(const self: _PBLPathCore; boxOut: _PBLBox): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathGetBoundingBox';

function _blPathGetFigureRange(const self: _PBLPathCore; index: Size_T; rangeOut: _PBLRange): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathGetFigureRange';

function _blPathGetLastVertex(const self: _PBLPathCore; vtxOut: _PBLPoint): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathGetLastVertex';

function _blPathGetClosestVertex(const self: _PBLPathCore; const p: _PBLPoint; maxDistance: Double; indexOut: PSize_T; distanceOut: PDouble): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathGetClosestVertex';

function _blPathHitTest(const self: _PBLPathCore; const p: _PBLPoint; fillRule: _BLFillRule): _BLHitTest; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathHitTest';

function _blStrokeOptionsInit(self: _PBLStrokeOptionsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStrokeOptionsInit';

function _blStrokeOptionsInitMove(self: _PBLStrokeOptionsCore; other: _PBLStrokeOptionsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStrokeOptionsInitMove';

function _blStrokeOptionsInitWeak(self: _PBLStrokeOptionsCore; const other: _PBLStrokeOptionsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStrokeOptionsInitWeak';

function _blStrokeOptionsDestroy(self: _PBLStrokeOptionsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStrokeOptionsDestroy';

function _blStrokeOptionsReset(self: _PBLStrokeOptionsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStrokeOptionsReset';

function _blStrokeOptionsEquals(const a: _PBLStrokeOptionsCore; const b: _PBLStrokeOptionsCore): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blStrokeOptionsEquals';

function _blStrokeOptionsAssignMove(self: _PBLStrokeOptionsCore; other: _PBLStrokeOptionsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStrokeOptionsAssignMove';

function _blStrokeOptionsAssignWeak(self: _PBLStrokeOptionsCore; const other: _PBLStrokeOptionsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStrokeOptionsAssignWeak';

function _blPathStrokeToSink(const self: _PBLPathCore; const range: _PBLRange; const strokeOptions: _PBLStrokeOptionsCore; const approximationOptions: _PBLApproximationOptions; a: _PBLPathCore; b: _PBLPathCore; c: _PBLPathCore; sink: _BLPathStrokeSinkFunc; userData: Pointer): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPathStrokeToSink';
{$ENDREGION 'path.h'}

{$REGION 'filesystem.h'}
type
  _BLFileInfoFlags = Integer;

const
  _BL_FILE_INFO_OWNER_R          = $00000100;
  _BL_FILE_INFO_OWNER_W          = $00000080;
  _BL_FILE_INFO_OWNER_X          = $00000040;
  _BL_FILE_INFO_OWNER_MASK       = $000001C0;
  _BL_FILE_INFO_GROUP_R          = $00000020;
  _BL_FILE_INFO_GROUP_W          = $00000010;
  _BL_FILE_INFO_GROUP_X          = $00000008;
  _BL_FILE_INFO_GROUP_MASK       = $00000038;
  _BL_FILE_INFO_OTHER_R          = $00000004;
  _BL_FILE_INFO_OTHER_W          = $00000002;
  _BL_FILE_INFO_OTHER_X          = $00000001;
  _BL_FILE_INFO_OTHER_MASK       = $00000007;
  _BL_FILE_INFO_SUID             = $00000800;
  _BL_FILE_INFO_SGID             = $00000400;
  _BL_FILE_INFO_PERMISSIONS_MASK = $00000FFF;
  _BL_FILE_INFO_REGULAR          = $00010000;
  _BL_FILE_INFO_DIRECTORY        = $00020000;
  _BL_FILE_INFO_SYMLINK          = $00040000;
  _BL_FILE_INFO_CHAR_DEVICE      = $00100000;
  _BL_FILE_INFO_BLOCK_DEVICE     = $00200000;
  _BL_FILE_INFO_FIFO             = $00400000;
  _BL_FILE_INFO_SOCKET           = $00800000;
  _BL_FILE_INFO_HIDDEN           = $01000000;
  _BL_FILE_INFO_EXECUTABLE       = $02000000;
  _BL_FILE_INFO_ARCHIVE          = $04000000;
  _BL_FILE_INFO_SYSTEM           = $08000000;
  _BL_FILE_INFO_VALID            = $80000000;

type
  _BLFileOpenFlags = Integer;

const
  _BL_FILE_OPEN_NO_FLAGS         = 0;
  _BL_FILE_OPEN_READ             = $00000001;
  _BL_FILE_OPEN_WRITE            = $00000002;
  _BL_FILE_OPEN_RW               = $00000003;
  _BL_FILE_OPEN_CREATE           = $00000004;
  _BL_FILE_OPEN_DELETE           = $00000008;
  _BL_FILE_OPEN_TRUNCATE         = $00000010;
  _BL_FILE_OPEN_READ_EXCLUSIVE   = $10000000;
  _BL_FILE_OPEN_WRITE_EXCLUSIVE  = $20000000;
  _BL_FILE_OPEN_RW_EXCLUSIVE     = $30000000;
  _BL_FILE_OPEN_CREATE_EXCLUSIVE = $40000000;
  _BL_FILE_OPEN_DELETE_EXCLUSIVE = $80000000;

type
  _BLFileSeekType = Integer;

const
  _BL_FILE_SEEK_SET       = 0;
  _BL_FILE_SEEK_CUR       = 1;
  _BL_FILE_SEEK_END       = 2;
  _BL_FILE_SEEK_MAX_VALUE = 3;

type
  _BLFileReadFlags = Integer;

const
  _BL_FILE_READ_NO_FLAGS         = 0;
  _BL_FILE_READ_MMAP_ENABLED     = $00000001;
  _BL_FILE_READ_MMAP_AVOID_SMALL = $00000002;
  _BL_FILE_READ_MMAP_NO_FALLBACK = $00000008;

type
  _BLFileCore = record
    _base: _BLObjectCore;
  end;
  _PBLFileCore = ^_BLFileCore;

type
  _BLFileInfo = record
    size: UInt64;
    modifiedTime: Int64;
    flags: _BLFileInfoFlags;
    uid: UInt32;
    gid: UInt32;
    reserved: array [0..4] of UInt32;
  end;
  _PBLFileInfo = ^_BLFileInfo;

function _blFileInit(self: _PBLFileCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFileInit';

function _blFileReset(self: _PBLFileCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFileReset';

function _blFileOpen(self: _PBLFileCore; const fileName: PUTF8Char; openFlags: _BLFileOpenFlags): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFileOpen';

function _blFileClose(self: _PBLFileCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFileClose';

function _blFileSeek(self: _PBLFileCore; offset: Int64; seekType: _BLFileSeekType; positionOut: PInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFileSeek';

function _blFileRead(self: _PBLFileCore; buffer: Pointer; n: Size_T; bytesReadOut: PSize_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFileRead';

function _blFileWrite(self: _PBLFileCore; const buffer: Pointer; n: Size_T; bytesWrittenOut: PSize_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFileWrite';

function _blFileTruncate(self: _PBLFileCore; maxSize: Int64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFileTruncate';

function _blFileGetInfo(self: _PBLFileCore; infoOut: _PBLFileInfo): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFileGetInfo';

function _blFileGetSize(self: _PBLFileCore; fileSizeOut: PUInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFileGetSize';

function _blFileSystemGetInfo(const fileName: PUTF8Char; infoOut: _PBLFileInfo): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFileSystemGetInfo';

function _blFileSystemReadFile(const fileName: PUTF8Char; dst: _PBLArrayCore; maxSize: Size_T; readFlags: _BLFileReadFlags): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFileSystemReadFile';

function _blFileSystemWriteFile(const fileName: PUTF8Char; const data: Pointer; size: Size_T; bytesWrittenOut: PSize_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFileSystemWriteFile';
{$ENDREGION 'filesystem.h'}

{$REGION 'string.h'}
type
  _BLStringCore = record
    base: _BLObjectCore;
  end;
  _PBLStringCore = ^_BLStringCore;

function _blStringInit(self: _PBLStringCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringInit';

function _blStringInitMove(self: _PBLStringCore; other: _PBLStringCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringInitMove';

function _blStringInitWeak(self: _PBLStringCore; const other: _PBLStringCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringInitWeak';

function _blStringInitWithData(self: _PBLStringCore; const str: PUTF8Char; size: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringInitWithData';

function _blStringDestroy(self: _PBLStringCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringDestroy';

function _blStringReset(self: _PBLStringCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringReset';

function _blStringGetData(const self: _PBLStringCore): PUTF8Char; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringGetData';

function _blStringGetSize(const self: _PBLStringCore): Size_T; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringGetSize';

function _blStringGetCapacity(const self: _PBLStringCore): Size_T; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringGetCapacity';

function _blStringClear(self: _PBLStringCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringClear';

function _blStringShrink(self: _PBLStringCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringShrink';

function _blStringReserve(self: _PBLStringCore; n: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringReserve';

function _blStringResize(self: _PBLStringCore; n: Size_T; fill: UTF8Char): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringResize';

function _blStringMakeMutable(self: _PBLStringCore; dataOut: PPUTF8Char): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringMakeMutable';

function _blStringModifyOp(self: _PBLStringCore; op: _BLModifyOp; n: Size_T; dataOut: PPUTF8Char): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringModifyOp';

function _blStringInsertOp(self: _PBLStringCore; index: Size_T; n: Size_T; dataOut: PPUTF8Char): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringInsertOp';

function _blStringAssignMove(self: _PBLStringCore; other: _PBLStringCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringAssignMove';

function _blStringAssignWeak(self: _PBLStringCore; const other: _PBLStringCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringAssignWeak';

function _blStringAssignDeep(self: _PBLStringCore; const other: _PBLStringCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringAssignDeep';

function _blStringAssignData(self: _PBLStringCore; const str: PUTF8Char; n: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringAssignData';

function _blStringApplyOpChar(self: _PBLStringCore; op: _BLModifyOp; c: UTF8Char; n: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringApplyOpChar';

function _blStringApplyOpData(self: _PBLStringCore; op: _BLModifyOp; const str: PUTF8Char; n: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringApplyOpData';

function _blStringApplyOpString(self: _PBLStringCore; op: _BLModifyOp; const other: _PBLStringCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringApplyOpString';

function _blStringApplyOpFormat(self: _PBLStringCore; op: _BLModifyOp; const fmt: PUTF8Char): _BLResult varargs; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringApplyOpFormat';

function _blStringApplyOpFormatV(self: _PBLStringCore; op: _BLModifyOp; const fmt: PUTF8Char; ap: Pointer): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringApplyOpFormatV';

function _blStringInsertChar(self: _PBLStringCore; index: Size_T; c: UTF8Char; n: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringInsertChar';

function _blStringInsertData(self: _PBLStringCore; index: Size_T; const str: PUTF8Char; n: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringInsertData';

function _blStringInsertString(self: _PBLStringCore; index: Size_T; const other: _PBLStringCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringInsertString';

function _blStringRemoveIndex(self: _PBLStringCore; index: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringRemoveIndex';

function _blStringRemoveRange(self: _PBLStringCore; rStart: Size_T; rEnd: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringRemoveRange';

function _blStringEquals(const a: _PBLStringCore; const b: _PBLStringCore): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringEquals';

function _blStringEqualsData(const self: _PBLStringCore; const str: PUTF8Char; n: Size_T): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringEqualsData';

function _blStringCompare(const a: _PBLStringCore; const b: _PBLStringCore): Integer; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringCompare';

function _blStringCompareData(const self: _PBLStringCore; const str: PUTF8Char; n: Size_T): Integer; cdecl;
  external _LIB_BLEND2D name _PU + 'blStringCompareData';
{$ENDREGION 'string.h'}

{$REGION 'fontdefs.h'}
type
  _BLOrientation = Integer;

const
  _BL_ORIENTATION_HORIZONTAL = 0;
  _BL_ORIENTATION_VERTICAL   = 1;
  _BL_ORIENTATION_MAX_VALUE  = 1;

type
  _BLFontFaceType = Integer;

const
  _BL_FONT_FACE_TYPE_NONE      = 0;
  _BL_FONT_FACE_TYPE_OPENTYPE  = 1;
  _BL_FONT_FACE_TYPE_MAX_VALUE = 1;

type
  _BLFontStretch = Integer;

const
  _BL_FONT_STRETCH_ULTRA_CONDENSED = 1;
  _BL_FONT_STRETCH_EXTRA_CONDENSED = 2;
  _BL_FONT_STRETCH_CONDENSED       = 3;
  _BL_FONT_STRETCH_SEMI_CONDENSED  = 4;
  _BL_FONT_STRETCH_NORMAL          = 5;
  _BL_FONT_STRETCH_SEMI_EXPANDED   = 6;
  _BL_FONT_STRETCH_EXPANDED        = 7;
  _BL_FONT_STRETCH_EXTRA_EXPANDED  = 8;
  _BL_FONT_STRETCH_ULTRA_EXPANDED  = 9;
  _BL_FONT_STRETCH_MAX_VALUE       = 9;

type
  _BLFontStyle = Integer;

const
  _BL_FONT_STYLE_NORMAL    = 0;
  _BL_FONT_STYLE_OBLIQUE   = 1;
  _BL_FONT_STYLE_ITALIC    = 2;
  _BL_FONT_STYLE_MAX_VALUE = 2;

type
  _BLFontWeight = Integer;

const
  _BL_FONT_WEIGHT_THIN        = 100;
  _BL_FONT_WEIGHT_EXTRA_LIGHT = 200;
  _BL_FONT_WEIGHT_LIGHT       = 300;
  _BL_FONT_WEIGHT_SEMI_LIGHT  = 350;
  _BL_FONT_WEIGHT_NORMAL      = 400;
  _BL_FONT_WEIGHT_MEDIUM      = 500;
  _BL_FONT_WEIGHT_SEMI_BOLD   = 600;
  _BL_FONT_WEIGHT_BOLD        = 700;
  _BL_FONT_WEIGHT_EXTRA_BOLD  = 800;
  _BL_FONT_WEIGHT_BLACK       = 900;
  _BL_FONT_WEIGHT_EXTRA_BLACK = 950;

type
  _BLFontStringId = Integer;

const
  _BL_FONT_STRING_ID_COPYRIGHT_NOTICE              = 0;
  _BL_FONT_STRING_ID_FAMILY_NAME                   = 1;
  _BL_FONT_STRING_ID_SUBFAMILY_NAME                = 2;
  _BL_FONT_STRING_ID_UNIQUE_IDENTIFIER             = 3;
  _BL_FONT_STRING_ID_FULL_NAME                     = 4;
  _BL_FONT_STRING_ID_VERSION_STRING                = 5;
  _BL_FONT_STRING_ID_POST_SCRIPT_NAME              = 6;
  _BL_FONT_STRING_ID_TRADEMARK                     = 7;
  _BL_FONT_STRING_ID_MANUFACTURER_NAME             = 8;
  _BL_FONT_STRING_ID_DESIGNER_NAME                 = 9;
  _BL_FONT_STRING_ID_DESCRIPTION                   = 10;
  _BL_FONT_STRING_ID_VENDOR_URL                    = 11;
  _BL_FONT_STRING_ID_DESIGNER_URL                  = 12;
  _BL_FONT_STRING_ID_LICENSE_DESCRIPTION           = 13;
  _BL_FONT_STRING_ID_LICENSE_INFO_URL              = 14;
  _BL_FONT_STRING_ID_RESERVED                      = 15;
  _BL_FONT_STRING_ID_TYPOGRAPHIC_FAMILY_NAME       = 16;
  _BL_FONT_STRING_ID_TYPOGRAPHIC_SUBFAMILY_NAME    = 17;
  _BL_FONT_STRING_ID_COMPATIBLE_FULL_NAME          = 18;
  _BL_FONT_STRING_ID_SAMPLE_TEXT                   = 19;
  _BL_FONT_STRING_ID_POST_SCRIPT_CID_NAME          = 20;
  _BL_FONT_STRING_ID_WWS_FAMILY_NAME               = 21;
  _BL_FONT_STRING_ID_WWS_SUBFAMILY_NAME            = 22;
  _BL_FONT_STRING_ID_LIGHT_BACKGROUND_PALETTE      = 23;
  _BL_FONT_STRING_ID_DARK_BACKGROUND_PALETTE       = 24;
  _BL_FONT_STRING_ID_VARIATIONS_POST_SCRIPT_PREFIX = 25;
  _BL_FONT_STRING_ID_COMMON_MAX_VALUE              = 26;
  _BL_FONT_STRING_ID_CUSTOM_START_INDEX            = 255;

type
  _BLFontUnicodeCoverageIndex = Integer;

const
  _BL_FONT_UC_INDEX_BASIC_LATIN                             = 0;
  _BL_FONT_UC_INDEX_LATIN1_SUPPLEMENT                       = 1;
  _BL_FONT_UC_INDEX_LATIN_EXTENDED_A                        = 2;
  _BL_FONT_UC_INDEX_LATIN_EXTENDED_B                        = 3;
  _BL_FONT_UC_INDEX_IPA_EXTENSIONS                          = 4;
  _BL_FONT_UC_INDEX_SPACING_MODIFIER_LETTERS                = 5;
  _BL_FONT_UC_INDEX_COMBINING_DIACRITICAL_MARKS             = 6;
  _BL_FONT_UC_INDEX_GREEK_AND_COPTIC                        = 7;
  _BL_FONT_UC_INDEX_COPTIC                                  = 8;
  _BL_FONT_UC_INDEX_CYRILLIC                                = 9;
  _BL_FONT_UC_INDEX_ARMENIAN                                = 10;
  _BL_FONT_UC_INDEX_HEBREW                                  = 11;
  _BL_FONT_UC_INDEX_VAI                                     = 12;
  _BL_FONT_UC_INDEX_ARABIC                                  = 13;
  _BL_FONT_UC_INDEX_NKO                                     = 14;
  _BL_FONT_UC_INDEX_DEVANAGARI                              = 15;
  _BL_FONT_UC_INDEX_BENGALI                                 = 16;
  _BL_FONT_UC_INDEX_GURMUKHI                                = 17;
  _BL_FONT_UC_INDEX_GUJARATI                                = 18;
  _BL_FONT_UC_INDEX_ORIYA                                   = 19;
  _BL_FONT_UC_INDEX_TAMIL                                   = 20;
  _BL_FONT_UC_INDEX_TELUGU                                  = 21;
  _BL_FONT_UC_INDEX_KANNADA                                 = 22;
  _BL_FONT_UC_INDEX_MALAYALAM                               = 23;
  _BL_FONT_UC_INDEX_THAI                                    = 24;
  _BL_FONT_UC_INDEX_LAO                                     = 25;
  _BL_FONT_UC_INDEX_GEORGIAN                                = 26;
  _BL_FONT_UC_INDEX_BALINESE                                = 27;
  _BL_FONT_UC_INDEX_HANGUL_JAMO                             = 28;
  _BL_FONT_UC_INDEX_LATIN_EXTENDED_ADDITIONAL               = 29;
  _BL_FONT_UC_INDEX_GREEK_EXTENDED                          = 30;
  _BL_FONT_UC_INDEX_GENERAL_PUNCTUATION                     = 31;
  _BL_FONT_UC_INDEX_SUPERSCRIPTS_AND_SUBSCRIPTS             = 32;
  _BL_FONT_UC_INDEX_CURRENCY_SYMBOLS                        = 33;
  _BL_FONT_UC_INDEX_COMBINING_DIACRITICAL_MARKS_FOR_SYMBOLS = 34;
  _BL_FONT_UC_INDEX_LETTERLIKE_SYMBOLS                      = 35;
  _BL_FONT_UC_INDEX_NUMBER_FORMS                            = 36;
  _BL_FONT_UC_INDEX_ARROWS                                  = 37;
  _BL_FONT_UC_INDEX_MATHEMATICAL_OPERATORS                  = 38;
  _BL_FONT_UC_INDEX_MISCELLANEOUS_TECHNICAL                 = 39;
  _BL_FONT_UC_INDEX_CONTROL_PICTURES                        = 40;
  _BL_FONT_UC_INDEX_OPTICAL_CHARACTER_RECOGNITION           = 41;
  _BL_FONT_UC_INDEX_ENCLOSED_ALPHANUMERICS                  = 42;
  _BL_FONT_UC_INDEX_BOX_DRAWING                             = 43;
  _BL_FONT_UC_INDEX_BLOCK_ELEMENTS                          = 44;
  _BL_FONT_UC_INDEX_GEOMETRIC_SHAPES                        = 45;
  _BL_FONT_UC_INDEX_MISCELLANEOUS_SYMBOLS                   = 46;
  _BL_FONT_UC_INDEX_DINGBATS                                = 47;
  _BL_FONT_UC_INDEX_CJK_SYMBOLS_AND_PUNCTUATION             = 48;
  _BL_FONT_UC_INDEX_HIRAGANA                                = 49;
  _BL_FONT_UC_INDEX_KATAKANA                                = 50;
  _BL_FONT_UC_INDEX_BOPOMOFO                                = 51;
  _BL_FONT_UC_INDEX_HANGUL_COMPATIBILITY_JAMO               = 52;
  _BL_FONT_UC_INDEX_PHAGS_PA                                = 53;
  _BL_FONT_UC_INDEX_ENCLOSED_CJK_LETTERS_AND_MONTHS         = 54;
  _BL_FONT_UC_INDEX_CJK_COMPATIBILITY                       = 55;
  _BL_FONT_UC_INDEX_HANGUL_SYLLABLES                        = 56;
  _BL_FONT_UC_INDEX_NON_PLANE                               = 57;
  _BL_FONT_UC_INDEX_PHOENICIAN                              = 58;
  _BL_FONT_UC_INDEX_CJK_UNIFIED_IDEOGRAPHS                  = 59;
  _BL_FONT_UC_INDEX_PRIVATE_USE_PLANE0                      = 60;
  _BL_FONT_UC_INDEX_CJK_STROKES                             = 61;
  _BL_FONT_UC_INDEX_ALPHABETIC_PRESENTATION_FORMS           = 62;
  _BL_FONT_UC_INDEX_ARABIC_PRESENTATION_FORMS_A             = 63;
  _BL_FONT_UC_INDEX_COMBINING_HALF_MARKS                    = 64;
  _BL_FONT_UC_INDEX_VERTICAL_FORMS                          = 65;
  _BL_FONT_UC_INDEX_SMALL_FORM_VARIANTS                     = 66;
  _BL_FONT_UC_INDEX_ARABIC_PRESENTATION_FORMS_B             = 67;
  _BL_FONT_UC_INDEX_HALFWIDTH_AND_FULLWIDTH_FORMS           = 68;
  _BL_FONT_UC_INDEX_SPECIALS                                = 69;
  _BL_FONT_UC_INDEX_TIBETAN                                 = 70;
  _BL_FONT_UC_INDEX_SYRIAC                                  = 71;
  _BL_FONT_UC_INDEX_THAANA                                  = 72;
  _BL_FONT_UC_INDEX_SINHALA                                 = 73;
  _BL_FONT_UC_INDEX_MYANMAR                                 = 74;
  _BL_FONT_UC_INDEX_ETHIOPIC                                = 75;
  _BL_FONT_UC_INDEX_CHEROKEE                                = 76;
  _BL_FONT_UC_INDEX_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS   = 77;
  _BL_FONT_UC_INDEX_OGHAM                                   = 78;
  _BL_FONT_UC_INDEX_RUNIC                                   = 79;
  _BL_FONT_UC_INDEX_KHMER                                   = 80;
  _BL_FONT_UC_INDEX_MONGOLIAN                               = 81;
  _BL_FONT_UC_INDEX_BRAILLE_PATTERNS                        = 82;
  _BL_FONT_UC_INDEX_YI_SYLLABLES_AND_RADICALS               = 83;
  _BL_FONT_UC_INDEX_TAGALOG_HANUNOO_BUHID_TAGBANWA          = 84;
  _BL_FONT_UC_INDEX_OLD_ITALIC                              = 85;
  _BL_FONT_UC_INDEX_GOTHIC                                  = 86;
  _BL_FONT_UC_INDEX_DESERET                                 = 87;
  _BL_FONT_UC_INDEX_MUSICAL_SYMBOLS                         = 88;
  _BL_FONT_UC_INDEX_MATHEMATICAL_ALPHANUMERIC_SYMBOLS       = 89;
  _BL_FONT_UC_INDEX_PRIVATE_USE_PLANE_15_16                 = 90;
  _BL_FONT_UC_INDEX_VARIATION_SELECTORS                     = 91;
  _BL_FONT_UC_INDEX_TAGS                                    = 92;
  _BL_FONT_UC_INDEX_LIMBU                                   = 93;
  _BL_FONT_UC_INDEX_TAI_LE                                  = 94;
  _BL_FONT_UC_INDEX_NEW_TAI_LUE                             = 95;
  _BL_FONT_UC_INDEX_BUGINESE                                = 96;
  _BL_FONT_UC_INDEX_GLAGOLITIC                              = 97;
  _BL_FONT_UC_INDEX_TIFINAGH                                = 98;
  _BL_FONT_UC_INDEX_YIJING_HEXAGRAM_SYMBOLS                 = 99;
  _BL_FONT_UC_INDEX_SYLOTI_NAGRI                            = 100;
  _BL_FONT_UC_INDEX_LINEAR_B_SYLLABARY_AND_IDEOGRAMS        = 101;
  _BL_FONT_UC_INDEX_ANCIENT_GREEK_NUMBERS                   = 102;
  _BL_FONT_UC_INDEX_UGARITIC                                = 103;
  _BL_FONT_UC_INDEX_OLD_PERSIAN                             = 104;
  _BL_FONT_UC_INDEX_SHAVIAN                                 = 105;
  _BL_FONT_UC_INDEX_OSMANYA                                 = 106;
  _BL_FONT_UC_INDEX_CYPRIOT_SYLLABARY                       = 107;
  _BL_FONT_UC_INDEX_KHAROSHTHI                              = 108;
  _BL_FONT_UC_INDEX_TAI_XUAN_JING_SYMBOLS                   = 109;
  _BL_FONT_UC_INDEX_CUNEIFORM                               = 110;
  _BL_FONT_UC_INDEX_COUNTING_ROD_NUMERALS                   = 111;
  _BL_FONT_UC_INDEX_SUNDANESE                               = 112;
  _BL_FONT_UC_INDEX_LEPCHA                                  = 113;
  _BL_FONT_UC_INDEX_OL_CHIKI                                = 114;
  _BL_FONT_UC_INDEX_SAURASHTRA                              = 115;
  _BL_FONT_UC_INDEX_KAYAH_LI                                = 116;
  _BL_FONT_UC_INDEX_REJANG                                  = 117;
  _BL_FONT_UC_INDEX_CHAM                                    = 118;
  _BL_FONT_UC_INDEX_ANCIENT_SYMBOLS                         = 119;
  _BL_FONT_UC_INDEX_PHAISTOS_DISC                           = 120;
  _BL_FONT_UC_INDEX_CARIAN_LYCIAN_LYDIAN                    = 121;
  _BL_FONT_UC_INDEX_DOMINO_AND_MAHJONG_TILES                = 122;
  _BL_FONT_UC_INDEX_INTERNAL_USAGE_123                      = 123;
  _BL_FONT_UC_INDEX_INTERNAL_USAGE_124                      = 124;
  _BL_FONT_UC_INDEX_INTERNAL_USAGE_125                      = 125;
  _BL_FONT_UC_INDEX_INTERNAL_USAGE_126                      = 126;
  _BL_FONT_UC_INDEX_INTERNAL_USAGE_127                      = 127;
  _BL_FONT_UC_INDEX_MAX_VALUE                               = 128;

type
  _BLTextDirection = Integer;

const
  _BL_TEXT_DIRECTION_LTR       = 0;
  _BL_TEXT_DIRECTION_RTL       = 1;
  _BL_TEXT_DIRECTION_MAX_VALUE = 1;

type
  _BLGlyphId = UInt32;

type
  _BLGlyphInfo = record
    cluster: UInt32;
    reserved: UInt32;
  end;
  _PBLGlyphInfo = ^_BLGlyphInfo;

type
  _BLGlyphPlacement = record
    placement: _BLPointI;
    advance: _BLPointI;
  end;
  _PBLGlyphPlacement = ^_BLGlyphPlacement;

type
  _BLGlyphMappingState = record
    glyphCount: Size_T;
    undefinedFirst: Size_T;
    undefinedCount: Size_T;
  end;
  _PBLGlyphMappingState = ^_BLGlyphMappingState;

type
  _BLGlyphOutlineSinkInfo = record
    glyphIndex: Size_T;
    contourCount: Size_T;
  end;

type
  _BLFontUnicodeCoverage = record
    data: array [0..3] of UInt32;
  end;
  _PBLFontUnicodeCoverage = ^_BLFontUnicodeCoverage;

type
  _BLFontPanose = record
  case Byte of
    0: (data: array [0..9] of Byte);
    1: (familyKind: Byte);
    2: (text: record
          familyKind: Byte;
          serifStyle: Byte;
          weight: Byte;
          proportion: Byte;
          contrast: Byte;
          strokeVariation: Byte;
          armStyle: Byte;
          letterform: Byte;
          midline: Byte;
          xHeight: Byte;
        end);
    3: (script: record
          familyKind: Byte;
          toolKind: Byte;
          weight: Byte;
          spacing: Byte;
          aspectRatio: Byte;
          contrast: Byte;
          topology: Byte;
          form: Byte;
          finals: Byte;
          xAscent: Byte;
        end);
    4: (decorative: record
          familyKind: Byte;
          decorativeClass: Byte;
          weight: Byte;
          aspect: Byte;
          contrast: Byte;
          serifVariant: Byte;
          treatment: Byte;
          lining: Byte;
          topology: Byte;
          characterRange: Byte;
        end);
    5: (symbol: record
          familyKind: Byte;
          symbolKind: Byte;
          weight: Byte;
          spacing: Byte;
          aspectRatioAndContrast: Byte;
          aspectRatio94: Byte;
          aspectRatio119: Byte;
          aspectRatio157: Byte;
          aspectRatio163: Byte;
          aspectRatio211: Byte;
        end);
  end;

type
  _BLFontMatrix = record
  case Byte of
    0: (m: array [0..3] of Double);
    1: (m00: Double;
        m01: Double;
        m10: Double;
        m11: Double);
  end;
  _PBLFontMatrix = ^_BLFontMatrix;

type
  _BLFontMetrics = record
    size: Single;
    ascent: Single;
    vAscent: Single;
    descent: Single;
    vDescent: Single;
    lineGap: Single;
    xHeight: Single;
    capHeight: Single;
    xMin: Single;
    yMin: Single;
    xMax: Single;
    yMax: Single;
    underlinePosition: Single;
    underlineThickness: Single;
    strikethroughPosition: Single;
    strikethroughThickness: Single;
  end;
  _PBLFontMetrics = ^_BLFontMetrics;

type
  _BLFontDesignMetrics = record
    unitsPerEm: Integer;
    lowestPPEM: Integer;
    lineGap: Integer;
    xHeight: Integer;
    capHeight: Integer;
    ascent: Integer;
    vAscent: Integer;
    descent: Integer;
    vDescent: Integer;
    hMinLSB: Integer;
    vMinLSB: Integer;
    hMinTSB: Integer;
    vMinTSB: Integer;
    hMaxAdvance: Integer;
    vMaxAdvance: Integer;
    glyphBoundingBox: _BLBoxI;
    underlinePosition: Integer;
    underlineThickness: Integer;
    strikethroughPosition: Integer;
    strikethroughThickness: Integer;
  end;
  _PBLFontDesignMetrics = ^_BLFontDesignMetrics;

type
  _BLTextMetrics = record
    advance: _BLPoint;
    leadingBearing: _BLPoint;
    trailingBearing: _BLPoint;
    boundingBox: _BLBox;
  end;
  _PBLTextMetrics = ^_BLTextMetrics;
{$ENDREGION 'fontdefs.h'}

{$REGION 'fontdata.h'}
type
  _BLFontDataFlags = Integer;

const
  _BL_FONT_DATA_NO_FLAGS        = 0;
  _BL_FONT_DATA_FLAG_COLLECTION = $00000001;

type
  _BLFontTable = record
    data: PUInt8;
    size: Size_T;
  end;
  _PBLFontTable = ^_BLFontTable;

type
  _BLFontDataCore = record
    _base: _BLObjectCore;
  end;
  _PBLFontDataCore = ^_BLFontDataCore;

function _blFontDataInit(self: _PBLFontDataCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontDataInit';

function _blFontDataInitMove(self: _PBLFontDataCore; other: _PBLFontDataCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontDataInitMove';

function _blFontDataInitWeak(self: _PBLFontDataCore; const other: _PBLFontDataCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontDataInitWeak';

function _blFontDataDestroy(self: _PBLFontDataCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontDataDestroy';

function _blFontDataReset(self: _PBLFontDataCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontDataReset';

function _blFontDataAssignMove(self: _PBLFontDataCore; other: _PBLFontDataCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontDataAssignMove';

function _blFontDataAssignWeak(self: _PBLFontDataCore; const other: _PBLFontDataCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontDataAssignWeak';

function _blFontDataCreateFromFile(self: _PBLFontDataCore; const fileName: PUTF8Char; readFlags: _BLFileReadFlags): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontDataCreateFromFile';

function _blFontDataCreateFromDataArray(self: _PBLFontDataCore; const dataArray: _PBLArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontDataCreateFromDataArray';

function _blFontDataCreateFromData(self: _PBLFontDataCore; const data: Pointer; dataSize: Size_T; destroyFunc: _BLDestroyExternalDataFunc; userData: Pointer): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontDataCreateFromData';

function _blFontDataEquals(const a: _PBLFontDataCore; const b: _PBLFontDataCore): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontDataEquals';

function _blFontDataGetFaceCount(const self: _PBLFontDataCore): UInt32; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontDataGetFaceCount';

function _blFontDataGetFaceType(const self: _PBLFontDataCore): _BLFontFaceType; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontDataGetFaceType';

function _blFontDataGetFlags(const self: _PBLFontDataCore): _BLFontDataFlags; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontDataGetFlags';

function _blFontDataGetTableTags(const self: _PBLFontDataCore; faceIndex: UInt32; dst: _PBLArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontDataGetTableTags';

function _blFontDataGetTables(const self: _PBLFontDataCore; faceIndex: UInt32; dst: _PBLFontTable; const tags: _PBLTag; count: Size_T): Size_T; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontDataGetTables';
{$ENDREGION 'fontdata.h'}

{$REGION 'fontface.h'}
type
  _BLFontFaceFlags = Integer;

const
  _BL_FONT_FACE_NO_FLAGS                   = 0;
  _BL_FONT_FACE_FLAG_TYPOGRAPHIC_NAMES     = $00000001;
  _BL_FONT_FACE_FLAG_TYPOGRAPHIC_METRICS   = $00000002;
  _BL_FONT_FACE_FLAG_CHAR_TO_GLYPH_MAPPING = $00000004;
  _BL_FONT_FACE_FLAG_HORIZONTAL_METIRCS    = $00000010;
  _BL_FONT_FACE_FLAG_VERTICAL_METRICS      = $00000020;
  _BL_FONT_FACE_FLAG_HORIZONTAL_KERNING    = $00000040;
  _BL_FONT_FACE_FLAG_VERTICAL_KERNING      = $00000080;
  _BL_FONT_FACE_FLAG_OPENTYPE_FEATURES     = $00000100;
  _BL_FONT_FACE_FLAG_PANOSE_DATA           = $00000200;
  _BL_FONT_FACE_FLAG_UNICODE_COVERAGE      = $00000400;
  _BL_FONT_FACE_FLAG_BASELINE_Y_EQUALS_0   = $00001000;
  _BL_FONT_FACE_FLAG_LSB_POINT_X_EQUALS_0  = $00002000;
  _BL_FONT_FACE_FLAG_VARIATION_SEQUENCES   = $10000000;
  _BL_FONT_FACE_FLAG_OPENTYPE_VARIATIONS   = $20000000;
  _BL_FONT_FACE_FLAG_SYMBOL_FONT           = $40000000;
  _BL_FONT_FACE_FLAG_LAST_RESORT_FONT      = $80000000;

type
  _BLFontFaceDiagFlags = Integer;

const
  _BL_FONT_FACE_DIAG_NO_FLAGS          = 0;
  _BL_FONT_FACE_DIAG_WRONG_NAME_DATA   = $00000001;
  _BL_FONT_FACE_DIAG_FIXED_NAME_DATA   = $00000002;
  _BL_FONT_FACE_DIAG_WRONG_KERN_DATA   = $00000004;
  _BL_FONT_FACE_DIAG_FIXED_KERN_DATA   = $00000008;
  _BL_FONT_FACE_DIAG_WRONG_CMAP_DATA   = $00000010;
  _BL_FONT_FACE_DIAG_WRONG_CMAP_FORMAT = $00000020;

type
  _BLFontOutlineType = Integer;

const
  _BL_FONT_OUTLINE_TYPE_NONE      = 0;
  _BL_FONT_OUTLINE_TYPE_TRUETYPE  = 1;
  _BL_FONT_OUTLINE_TYPE_CFF       = 2;
  _BL_FONT_OUTLINE_TYPE_CFF2      = 3;
  _BL_FONT_OUTLINE_TYPE_MAX_VALUE = 3;

type
  _BLFontFaceInfo = record
    faceType: UInt8;
    outlineType: UInt8;
    reserved8: array [0..1] of UInt8;
    glyphCount: UInt32;
    revision: UInt32;
    faceIndex: UInt32;
    faceFlags: UInt32;
    diagFlags: UInt32;
    reserved: array [0..1] of UInt32;
  end;
  _PBLFontFaceInfo = ^_BLFontFaceInfo;

type
  _BLFontFaceCore = record
    _base: _BLObjectCore;
  end;
  _PBLFontFaceCore = ^_BLFontFaceCore;

function _blFontFaceInit(self: _PBLFontFaceCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFaceInit';

function _blFontFaceInitMove(self: _PBLFontFaceCore; other: _PBLFontFaceCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFaceInitMove';

function _blFontFaceInitWeak(self: _PBLFontFaceCore; const other: _PBLFontFaceCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFaceInitWeak';

function _blFontFaceDestroy(self: _PBLFontFaceCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFaceDestroy';

function _blFontFaceReset(self: _PBLFontFaceCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFaceReset';

function _blFontFaceAssignMove(self: _PBLFontFaceCore; other: _PBLFontFaceCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFaceAssignMove';

function _blFontFaceAssignWeak(self: _PBLFontFaceCore; const other: _PBLFontFaceCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFaceAssignWeak';

function _blFontFaceEquals(const a: _PBLFontFaceCore; const b: _PBLFontFaceCore): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFaceEquals';

function _blFontFaceCreateFromFile(self: _PBLFontFaceCore; const fileName: PUTF8Char; readFlags: _BLFileReadFlags): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFaceCreateFromFile';

function _blFontFaceCreateFromData(self: _PBLFontFaceCore; const fontData: _PBLFontDataCore; faceIndex: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFaceCreateFromData';

function _blFontFaceGetFullName(const self: _PBLFontFaceCore; &out: _PBLStringCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFaceGetFullName';

function _blFontFaceGetFamilyName(const self: _PBLFontFaceCore; &out: _PBLStringCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFaceGetFamilyName';

function _blFontFaceGetSubfamilyName(const self: _PBLFontFaceCore; &out: _PBLStringCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFaceGetSubfamilyName';

function _blFontFaceGetPostScriptName(const self: _PBLFontFaceCore; &out: _PBLStringCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFaceGetPostScriptName';

function _blFontFaceGetFaceInfo(const self: _PBLFontFaceCore; &out: _PBLFontFaceInfo): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFaceGetFaceInfo';

function _blFontFaceGetDesignMetrics(const self: _PBLFontFaceCore; &out: _PBLFontDesignMetrics): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFaceGetDesignMetrics';

function _blFontFaceGetUnicodeCoverage(const self: _PBLFontFaceCore; &out: _PBLFontUnicodeCoverage): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFaceGetUnicodeCoverage';

function _blFontFaceGetCharacterCoverage(const self: _PBLFontFaceCore; &out: _PBLBitSetCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFaceGetCharacterCoverage';

function _blFontFaceHasScriptTag(const self: _PBLFontFaceCore; scriptTag: _BLTag): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFaceHasScriptTag';

function _blFontFaceHasFeatureTag(const self: _PBLFontFaceCore; featureTag: _BLTag): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFaceHasFeatureTag';

function _blFontFaceHasVariationTag(const self: _PBLFontFaceCore; variationTag: _BLTag): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFaceHasVariationTag';

function _blFontFaceGetScriptTags(const self: _PBLFontFaceCore; &out: _PBLArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFaceGetScriptTags';

function _blFontFaceGetFeatureTags(const self: _PBLFontFaceCore; &out: _PBLArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFaceGetFeatureTags';

function _blFontFaceGetVariationTags(const self: _PBLFontFaceCore; &out: _PBLArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFaceGetVariationTags';
{$ENDREGION 'fontface.h'}

{$REGION 'fontfeaturesettings.h'}
type
  _BLFontFeatureSettingsCore = record
    _base: _BLObjectCore;
  end;
  _PBLFontFeatureSettingsCore = ^_BLFontFeatureSettingsCore;

const
  _BL_FONT_FEATURE_INVALID_VALUE = $FFFFFFFF;

type
  _BLFontFeatureItem = record
    tag: _BLTag;
    value: UInt32;
  end;
  _PBLFontFeatureItem = ^_BLFontFeatureItem;

type
  _BLFontFeatureSettingsView = record
    data: _PBLFontFeatureItem;
    size: Size_T;
    ssoData: array [0..35] of _BLFontFeatureItem;
  end;
  _PBLFontFeatureSettingsView = ^_BLFontFeatureSettingsView;

function _blFontFeatureSettingsInit(self: _PBLFontFeatureSettingsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFeatureSettingsInit';

function _blFontFeatureSettingsInitMove(self: _PBLFontFeatureSettingsCore; other: _PBLFontFeatureSettingsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFeatureSettingsInitMove';

function _blFontFeatureSettingsInitWeak(self: _PBLFontFeatureSettingsCore; const other: _PBLFontFeatureSettingsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFeatureSettingsInitWeak';

function _blFontFeatureSettingsDestroy(self: _PBLFontFeatureSettingsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFeatureSettingsDestroy';

function _blFontFeatureSettingsReset(self: _PBLFontFeatureSettingsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFeatureSettingsReset';

function _blFontFeatureSettingsClear(self: _PBLFontFeatureSettingsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFeatureSettingsClear';

function _blFontFeatureSettingsShrink(self: _PBLFontFeatureSettingsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFeatureSettingsShrink';

function _blFontFeatureSettingsAssignMove(self: _PBLFontFeatureSettingsCore; other: _PBLFontFeatureSettingsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFeatureSettingsAssignMove';

function _blFontFeatureSettingsAssignWeak(self: _PBLFontFeatureSettingsCore; const other: _PBLFontFeatureSettingsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFeatureSettingsAssignWeak';

function _blFontFeatureSettingsGetSize(const self: _PBLFontFeatureSettingsCore): Size_T; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFeatureSettingsGetSize';

function _blFontFeatureSettingsGetCapacity(const self: _PBLFontFeatureSettingsCore): Size_T; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFeatureSettingsGetCapacity';

function _blFontFeatureSettingsGetView(const self: _PBLFontFeatureSettingsCore; &out: _PBLFontFeatureSettingsView): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFeatureSettingsGetView';

function _blFontFeatureSettingsHasValue(const self: _PBLFontFeatureSettingsCore; featureTag: _BLTag): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFeatureSettingsHasValue';

function _blFontFeatureSettingsGetValue(const self: _PBLFontFeatureSettingsCore; featureTag: _BLTag): UInt32; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFeatureSettingsGetValue';

function _blFontFeatureSettingsSetValue(self: _PBLFontFeatureSettingsCore; featureTag: _BLTag; value: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFeatureSettingsSetValue';

function _blFontFeatureSettingsRemoveValue(self: _PBLFontFeatureSettingsCore; featureTag: _BLTag): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFeatureSettingsRemoveValue';

function _blFontFeatureSettingsEquals(const a: _PBLFontFeatureSettingsCore; const b: _PBLFontFeatureSettingsCore): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontFeatureSettingsEquals';
{$ENDREGION 'fontfeaturesettings.h'}

{$REGION 'fontvariationsettings.h'}
type
  _BLFontVariationSettingsCore = record
    _base: _BLObjectCore;
  end;
  _PBLFontVariationSettingsCore = ^_BLFontVariationSettingsCore;

type
  _BLFontVariationItem = record
    tag: _BLTag;
    value: Single;
  end;
  _PBLFontVariationItem = ^_BLFontVariationItem;

type
  _BLFontVariationSettingsView = record
    data: _PBLFontVariationItem;
    size: Size_T;
    ssoData: array [0..2] of _BLFontVariationItem;
  end;
  _PBLFontVariationSettingsView = ^_BLFontVariationSettingsView;

function _blFontVariationSettingsInit(self: _PBLFontVariationSettingsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontVariationSettingsInit';

function _blFontVariationSettingsInitMove(self: _PBLFontVariationSettingsCore; other: _PBLFontVariationSettingsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontVariationSettingsInitMove';

function _blFontVariationSettingsInitWeak(self: _PBLFontVariationSettingsCore; const other: _PBLFontVariationSettingsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontVariationSettingsInitWeak';

function _blFontVariationSettingsDestroy(self: _PBLFontVariationSettingsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontVariationSettingsDestroy';

function _blFontVariationSettingsReset(self: _PBLFontVariationSettingsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontVariationSettingsReset';

function _blFontVariationSettingsClear(self: _PBLFontVariationSettingsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontVariationSettingsClear';

function _blFontVariationSettingsShrink(self: _PBLFontVariationSettingsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontVariationSettingsShrink';

function _blFontVariationSettingsAssignMove(self: _PBLFontVariationSettingsCore; other: _PBLFontVariationSettingsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontVariationSettingsAssignMove';

function _blFontVariationSettingsAssignWeak(self: _PBLFontVariationSettingsCore; const other: _PBLFontVariationSettingsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontVariationSettingsAssignWeak';

function _blFontVariationSettingsGetSize(const self: _PBLFontVariationSettingsCore): Size_T; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontVariationSettingsGetSize';

function _blFontVariationSettingsGetCapacity(const self: _PBLFontVariationSettingsCore): Size_T; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontVariationSettingsGetCapacity';

function _blFontVariationSettingsGetView(const self: _PBLFontVariationSettingsCore; &out: _PBLFontVariationSettingsView): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontVariationSettingsGetView';

function _blFontVariationSettingsHasValue(const self: _PBLFontVariationSettingsCore; variationTag: _BLTag): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontVariationSettingsHasValue';

function _blFontVariationSettingsGetValue(const self: _PBLFontVariationSettingsCore; variationTag: _BLTag): Single; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontVariationSettingsGetValue';

function _blFontVariationSettingsSetValue(self: _PBLFontVariationSettingsCore; variationTag: _BLTag; value: Single): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontVariationSettingsSetValue';

function _blFontVariationSettingsRemoveValue(self: _PBLFontVariationSettingsCore; variationTag: _BLTag): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontVariationSettingsRemoveValue';

function _blFontVariationSettingsEquals(const a: _PBLFontVariationSettingsCore; const b: _PBLFontVariationSettingsCore): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontVariationSettingsEquals';
{$ENDREGION 'fontvariationsettings.h'}

{$REGION 'glyphrun.h'}
type
  _BLGlyphRunFlags = Integer;

const
  _BL_GLYPH_RUN_NO_FLAGS               = 0;
  _BL_GLYPH_RUN_FLAG_UCS4_CONTENT      = $10000000;
  _BL_GLYPH_RUN_FLAG_INVALID_TEXT      = $20000000;
  _BL_GLYPH_RUN_FLAG_UNDEFINED_GLYPHS  = $40000000;
  _BL_GLYPH_RUN_FLAG_INVALID_FONT_DATA = $80000000;

type
  _BLGlyphPlacementType = Integer;

const
  _BL_GLYPH_PLACEMENT_TYPE_NONE           = 0;
  _BL_GLYPH_PLACEMENT_TYPE_ADVANCE_OFFSET = 1;
  _BL_GLYPH_PLACEMENT_TYPE_DESIGN_UNITS   = 2;
  _BL_GLYPH_PLACEMENT_TYPE_USER_UNITS     = 3;
  _BL_GLYPH_PLACEMENT_TYPE_ABSOLUTE_UNITS = 4;
  _BL_GLYPH_PLACEMENT_TYPE_MAX_VALUE      = 4;

type
  _BLGlyphRun = record
    glyphData: Pointer;
    placementData: Pointer;
    size: Size_T;
    reserved: UInt8;
    placementType: UInt8;
    glyphAdvance: Int8;
    placementAdvance: Int8;
    flags: UInt32;
  end;
  _PBLGlyphRun = ^_BLGlyphRun;
{$ENDREGION 'glyphrun.h'}

{$REGION 'glyphbuffer.h'}
type
  _BLGlyphBufferImpl = record
    run: record
           case Byte of
             0: (content: PUInt32;
                 placementData: _PBLGlyphPlacement;
                 size: Size_T;
                 reserved: UInt32;
                 flags: UInt32);
             1: (glyphRun: _BLGlyphRun);
         end;
    infoData: _PBLGlyphInfo;
  end;
  _PBLGlyphBufferImpl = ^_BLGlyphBufferImpl;

type
  _BLGlyphBufferCore = record
    _base: _BLObjectCore;
  end;
  _PBLGlyphBufferCore = ^_BLGlyphBufferCore;

function _blGlyphBufferInit(self: _PBLGlyphBufferCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGlyphBufferInit';

function _blGlyphBufferInitMove(self: _PBLGlyphBufferCore; other: _PBLGlyphBufferCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGlyphBufferInitMove';

function _blGlyphBufferDestroy(self: _PBLGlyphBufferCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGlyphBufferDestroy';

function _blGlyphBufferReset(self: _PBLGlyphBufferCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGlyphBufferReset';

function _blGlyphBufferClear(self: _PBLGlyphBufferCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGlyphBufferClear';

function _blGlyphBufferGetSize(const self: _PBLGlyphBufferCore): Size_T; cdecl;
  external _LIB_BLEND2D name _PU + 'blGlyphBufferGetSize';

function _blGlyphBufferGetFlags(const self: _PBLGlyphBufferCore): UInt32; cdecl;
  external _LIB_BLEND2D name _PU + 'blGlyphBufferGetFlags';

function _blGlyphBufferGetGlyphRun(const self: _PBLGlyphBufferCore): _PBLGlyphRun; cdecl;
  external _LIB_BLEND2D name _PU + 'blGlyphBufferGetGlyphRun';

function _blGlyphBufferGetContent(const self: _PBLGlyphBufferCore): PUInt32; cdecl;
  external _LIB_BLEND2D name _PU + 'blGlyphBufferGetContent';

function _blGlyphBufferGetInfoData(const self: _PBLGlyphBufferCore): _PBLGlyphInfo; cdecl;
  external _LIB_BLEND2D name _PU + 'blGlyphBufferGetInfoData';

function _blGlyphBufferGetPlacementData(const self: _PBLGlyphBufferCore): _PBLGlyphPlacement; cdecl;
  external _LIB_BLEND2D name _PU + 'blGlyphBufferGetPlacementData';

function _blGlyphBufferSetText(self: _PBLGlyphBufferCore; const textData: Pointer; size: Size_T; encoding: _BLTextEncoding): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGlyphBufferSetText';

function _blGlyphBufferSetGlyphs(self: _PBLGlyphBufferCore; const glyphData: PUInt32; size: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGlyphBufferSetGlyphs';

function _blGlyphBufferSetGlyphsFromStruct(self: _PBLGlyphBufferCore; const glyphData: Pointer; size: Size_T; glyphIdSize: Size_T; glyphIdAdvance: IntPtr): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGlyphBufferSetGlyphsFromStruct';

function _blGlyphBufferSetDebugSink(self: _PBLGlyphBufferCore; sink: _BLDebugMessageSinkFunc; userData: Pointer): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGlyphBufferSetDebugSink';

function _blGlyphBufferResetDebugSink(self: _PBLGlyphBufferCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGlyphBufferResetDebugSink';
{$ENDREGION 'glyphbuffer.h'}

{$REGION 'font.h'}
type
  _BLFontCore = record
    _base: _BLObjectCore;
  end;
  _PBLFontCore = ^_BLFontCore;

function _blFontInit(self: _PBLFontCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontInit';

function _blFontInitMove(self: _PBLFontCore; other: _PBLFontCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontInitMove';

function _blFontInitWeak(self: _PBLFontCore; const other: _PBLFontCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontInitWeak';

function _blFontDestroy(self: _PBLFontCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontDestroy';

function _blFontReset(self: _PBLFontCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontReset';

function _blFontAssignMove(self: _PBLFontCore; other: _PBLFontCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontAssignMove';

function _blFontAssignWeak(self: _PBLFontCore; const other: _PBLFontCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontAssignWeak';

function _blFontEquals(const a: _PBLFontCore; const b: _PBLFontCore): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontEquals';

function _blFontCreateFromFace(self: _PBLFontCore; const face: _PBLFontFaceCore; size: Single): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontCreateFromFace';

function _blFontCreateFromFaceWithSettings(self: _PBLFontCore; const face: _PBLFontFaceCore; size: Single; const featureSettings: _PBLFontFeatureSettingsCore; const variationSettings: _PBLFontVariationSettingsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontCreateFromFaceWithSettings';

function _blFontGetFace(const self: _PBLFontCore; &out: _PBLFontFaceCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontGetFace';

function _blFontGetSize(const self: _PBLFontCore): Single; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontGetSize';

function _blFontSetSize(self: _PBLFontCore; size: Single): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontSetSize';

function _blFontGetMetrics(const self: _PBLFontCore; &out: _PBLFontMetrics): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontGetMetrics';

function _blFontGetMatrix(const self: _PBLFontCore; &out: _PBLFontMatrix): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontGetMatrix';

function _blFontGetDesignMetrics(const self: _PBLFontCore; &out: _PBLFontDesignMetrics): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontGetDesignMetrics';

function _blFontGetFeatureSettings(const self: _PBLFontCore; &out: _PBLFontFeatureSettingsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontGetFeatureSettings';

function _blFontSetFeatureSettings(self: _PBLFontCore; const featureSettings: _PBLFontFeatureSettingsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontSetFeatureSettings';

function _blFontResetFeatureSettings(self: _PBLFontCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontResetFeatureSettings';

function _blFontGetVariationSettings(const self: _PBLFontCore; &out: _PBLFontVariationSettingsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontGetVariationSettings';

function _blFontSetVariationSettings(self: _PBLFontCore; const variationSettings: _PBLFontVariationSettingsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontSetVariationSettings';

function _blFontResetVariationSettings(self: _PBLFontCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontResetVariationSettings';

function _blFontShape(const self: _PBLFontCore; gb: _PBLGlyphBufferCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontShape';

function _blFontMapTextToGlyphs(const self: _PBLFontCore; gb: _PBLGlyphBufferCore; stateOut: _PBLGlyphMappingState): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontMapTextToGlyphs';

function _blFontPositionGlyphs(const self: _PBLFontCore; gb: _PBLGlyphBufferCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontPositionGlyphs';

function _blFontApplyKerning(const self: _PBLFontCore; gb: _PBLGlyphBufferCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontApplyKerning';

function _blFontApplyGSub(const self: _PBLFontCore; gb: _PBLGlyphBufferCore; const lookups: _PBLBitArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontApplyGSub';

function _blFontApplyGPos(const self: _PBLFontCore; gb: _PBLGlyphBufferCore; const lookups: _PBLBitArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontApplyGPos';

function _blFontGetTextMetrics(const self: _PBLFontCore; gb: _PBLGlyphBufferCore; &out: _PBLTextMetrics): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontGetTextMetrics';

function _blFontGetGlyphBounds(const self: _PBLFontCore; const glyphData: PUInt32; glyphAdvance: IntPtr; &out: _PBLBoxI; count: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontGetGlyphBounds';

function _blFontGetGlyphAdvances(const self: _PBLFontCore; const glyphData: PUInt32; glyphAdvance: IntPtr; &out: _PBLGlyphPlacement; count: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontGetGlyphAdvances';

function _blFontGetGlyphOutlines(const self: _PBLFontCore; glyphId: _BLGlyphId; const userTransform: _PBLMatrix2D; &out: _PBLPathCore; sink: _BLPathSinkFunc; userData: Pointer): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontGetGlyphOutlines';

function _blFontGetGlyphRunOutlines(const self: _PBLFontCore; const glyphRun: _PBLGlyphRun; const userTransform: _PBLMatrix2D; &out: _PBLPathCore; sink: _BLPathSinkFunc; userData: Pointer): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontGetGlyphRunOutlines';
{$ENDREGION 'font.h'}

{$REGION 'fontmanager.h'}
type
  _BLFontManagerCore = record
    _base: _BLObjectCore;
  end;
  _PBLFontManagerCore = ^_BLFontManagerCore;

type
  _BLFontQueryProperties = record
    style: UInt32;
    weight: UInt32;
    stretch: UInt32;
  end;
  _PBLFontQueryProperties = ^_BLFontQueryProperties;

function _blFontManagerInit(self: _PBLFontManagerCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontManagerInit';

function _blFontManagerInitMove(self: _PBLFontManagerCore; other: _PBLFontManagerCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontManagerInitMove';

function _blFontManagerInitWeak(self: _PBLFontManagerCore; const other: _PBLFontManagerCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontManagerInitWeak';

function _blFontManagerInitNew(self: _PBLFontManagerCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontManagerInitNew';

function _blFontManagerDestroy(self: _PBLFontManagerCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontManagerDestroy';

function _blFontManagerReset(self: _PBLFontManagerCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontManagerReset';

function _blFontManagerAssignMove(self: _PBLFontManagerCore; other: _PBLFontManagerCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontManagerAssignMove';

function _blFontManagerAssignWeak(self: _PBLFontManagerCore; const other: _PBLFontManagerCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontManagerAssignWeak';

function _blFontManagerCreate(self: _PBLFontManagerCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontManagerCreate';

function _blFontManagerGetFaceCount(const self: _PBLFontManagerCore): Size_T; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontManagerGetFaceCount';

function _blFontManagerGetFamilyCount(const self: _PBLFontManagerCore): Size_T; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontManagerGetFamilyCount';

function _blFontManagerHasFace(const self: _PBLFontManagerCore; const face: _PBLFontFaceCore): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontManagerHasFace';

function _blFontManagerAddFace(self: _PBLFontManagerCore; const face: _PBLFontFaceCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontManagerAddFace';

function _blFontManagerQueryFace(const self: _PBLFontManagerCore; const name: PUTF8Char; nameSize: Size_T; const properties: _PBLFontQueryProperties; &out: _PBLFontFaceCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontManagerQueryFace';

function _blFontManagerQueryFacesByFamilyName(const self: _PBLFontManagerCore; const name: PUTF8Char; nameSize: Size_T; &out: _PBLArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontManagerQueryFacesByFamilyName';

function _blFontManagerEquals(const a: _PBLFontManagerCore; const b: _PBLFontManagerCore): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blFontManagerEquals';
{$ENDREGION 'fontmanager.h'}

{$REGION 'context.h'}
type
  _BLContextType = Integer;

const
  _BL_CONTEXT_TYPE_NONE       = 0;
  _BL_CONTEXT_TYPE_DUMMY      = 1;
  _BL_CONTEXT_TYPE_RASTER     = 3;
  _BL_CONTEXT_TYPE_MAX_VALUE  = 3;

type
  _BLContextHint = Integer;

const
  _BL_CONTEXT_HINT_RENDERING_QUALITY = 0;
  _BL_CONTEXT_HINT_GRADIENT_QUALITY  = 1;
  _BL_CONTEXT_HINT_PATTERN_QUALITY   = 2;
  _BL_CONTEXT_HINT_MAX_VALUE         = 7;

type
  _BLContextStyleSlot = Integer;

const
  _BL_CONTEXT_STYLE_SLOT_FILL      = 0;
  _BL_CONTEXT_STYLE_SLOT_STROKE    = 1;
  _BL_CONTEXT_STYLE_SLOT_MAX_VALUE = 1;

type
  _BLContextRenderTextOp = Integer;

const
  _BL_CONTEXT_RENDER_TEXT_OP_UTF8      = _BL_TEXT_ENCODING_UTF8;
  _BL_CONTEXT_RENDER_TEXT_OP_UTF16     = _BL_TEXT_ENCODING_UTF16;
  _BL_CONTEXT_RENDER_TEXT_OP_UTF32     = _BL_TEXT_ENCODING_UTF32;
  _BL_CONTEXT_RENDER_TEXT_OP_LATIN1    = _BL_TEXT_ENCODING_LATIN1;
  _BL_CONTEXT_RENDER_TEXT_OP_WCHAR     = _BL_TEXT_ENCODING_WCHAR;
  _BL_CONTEXT_RENDER_TEXT_OP_GLYPH_RUN = 4;
  _BL_CONTEXT_RENDER_TEXT_OP_MAX_VALUE = 4;

type
  _BLContextFlushFlags = Integer;

const
  _BL_CONTEXT_FLUSH_NO_FLAGS = 0;
  _BL_CONTEXT_FLUSH_SYNC     = $80000000;

type
  _BLContextCreateFlags = Integer;

const
  _BL_CONTEXT_CREATE_NO_FLAGS                   = 0;
  _BL_CONTEXT_CREATE_FLAG_DISABLE_JIT           = $00000001;
  _BL_CONTEXT_CREATE_FLAG_FALLBACK_TO_SYNC      = $00100000;
  _BL_CONTEXT_CREATE_FLAG_ISOLATED_THREAD_POOL  = $01000000;
  _BL_CONTEXT_CREATE_FLAG_ISOLATED_JIT_RUNTIME  = $02000000;
  _BL_CONTEXT_CREATE_FLAG_ISOLATED_JIT_LOGGING  = $04000000;
  _BL_CONTEXT_CREATE_FLAG_OVERRIDE_CPU_FEATURES = $08000000;

type
  _BLContextErrorFlags = Integer;

const
  _BL_CONTEXT_ERROR_NO_FLAGS                   = 0;
  _BL_CONTEXT_ERROR_FLAG_INVALID_VALUE         = $00000001;
  _BL_CONTEXT_ERROR_FLAG_INVALID_STATE         = $00000002;
  _BL_CONTEXT_ERROR_FLAG_INVALID_GEOMETRY      = $00000004;
  _BL_CONTEXT_ERROR_FLAG_INVALID_GLYPH         = $00000008;
  _BL_CONTEXT_ERROR_FLAG_INVALID_FONT          = $00000010;
  _BL_CONTEXT_ERROR_FLAG_THREAD_POOL_EXHAUSTED = $20000000;
  _BL_CONTEXT_ERROR_FLAG_OUT_OF_MEMORY         = $40000000;
  _BL_CONTEXT_ERROR_FLAG_UNKNOWN_ERROR         = $80000000;

type
  _BLContextStyleSwapMode = Integer;

const
  _BL_CONTEXT_STYLE_SWAP_MODE_STYLES            = 0;
  _BL_CONTEXT_STYLE_SWAP_MODE_STYLES_WITH_ALPHA = 1;
  _BL_CONTEXT_STYLE_SWAP_MODE_MAX_VALUE         = 1;

type
  _BLContextStyleTransformMode = Integer;

const
  _BL_CONTEXT_STYLE_TRANSFORM_MODE_USER      = 0;
  _BL_CONTEXT_STYLE_TRANSFORM_MODE_META      = 1;
  _BL_CONTEXT_STYLE_TRANSFORM_MODE_NONE      = 2;
  _BL_CONTEXT_STYLE_TRANSFORM_MODE_MAX_VALUE = 2;

//! Clip mode.
type
  _BLClipMode = Integer;

const
  _BL_CLIP_MODE_ALIGNED_RECT   = 0;
  _BL_CLIP_MODE_UNALIGNED_RECT = 1;
  _BL_CLIP_MODE_MASK           = 2;
  _BL_CLIP_MODE_COUNT          = 3;

type
  _BLCompOp = Integer;

const
  _BL_COMP_OP_SRC_OVER     = 0;
  _BL_COMP_OP_SRC_COPY     = 1;
  _BL_COMP_OP_SRC_IN       = 2;
  _BL_COMP_OP_SRC_OUT      = 3;
  _BL_COMP_OP_SRC_ATOP     = 4;
  _BL_COMP_OP_DST_OVER     = 5;
  _BL_COMP_OP_DST_COPY     = 6;
  _BL_COMP_OP_DST_IN       = 7;
  _BL_COMP_OP_DST_OUT      = 8;
  _BL_COMP_OP_DST_ATOP     = 9;
  _BL_COMP_OP_XOR          = 10;
  _BL_COMP_OP_CLEAR        = 11;
  _BL_COMP_OP_PLUS         = 12;
  _BL_COMP_OP_MINUS        = 13;
  _BL_COMP_OP_MODULATE     = 14;
  _BL_COMP_OP_MULTIPLY     = 15;
  _BL_COMP_OP_SCREEN       = 16;
  _BL_COMP_OP_OVERLAY      = 17;
  _BL_COMP_OP_DARKEN       = 18;
  _BL_COMP_OP_LIGHTEN      = 19;
  _BL_COMP_OP_COLOR_DODGE  = 20;
  _BL_COMP_OP_COLOR_BURN   = 21;
  _BL_COMP_OP_LINEAR_BURN  = 22;
  _BL_COMP_OP_LINEAR_LIGHT = 23;
  _BL_COMP_OP_PIN_LIGHT    = 24;
  _BL_COMP_OP_HARD_LIGHT   = 25;
  _BL_COMP_OP_SOFT_LIGHT   = 26;
  _BL_COMP_OP_DIFFERENCE   = 27;
  _BL_COMP_OP_EXCLUSION    = 28;
  _BL_COMP_OP_MAX_VALUE    = 28;

type
  _BLRenderingQuality = Integer;

const
  _BL_RENDERING_QUALITY_ANTIALIAS = 0;
  _BL_RENDERING_QUALITY_MAX_VALUE = 0;

type
  _BLContextCreateInfo = record
    flags: UInt32;
    threadCount: UInt32;
    cpuFeatures: UInt32;
    commandQueueLimit: UInt32;
    savedStateLimit: UInt32;
    pixelOrigin: _BLPointI;
    reserved: array [0..0] of UInt32;
  end;
  _PBLContextCreateInfo = ^_BLContextCreateInfo;

type
  _BLContextCookie = record
    data: array [0..1] of UInt64;
  end;
  _PBLContextCookie = ^_BLContextCookie;

type
  _BLContextHints = packed record
  case Byte of
    0: (renderingQuality: Byte;
        gradientQuality: Byte;
        patternQuality: Byte);
    1: (hints: array [0.._BL_CONTEXT_HINT_MAX_VALUE] of Byte);
  end;
  _PBLContextHints = ^_BLContextHints;

type
  _BLContextCore = record
    _base: _BLObjectCore;
  end;
  _PBLContextCore = ^_BLContextCore;

type
  _BLContextState = record
    targetImage: _PBLImageCore;
    targetSize: _BLSize;
    hints: _BLContextHints;
    compOp: UInt8;
    fillRule: UInt8;
    styleType: array [0..1] of UInt8;
    savedStateCount: UInt32;
    globalAlpha: Double;
    styleAlpha: array [0..1] of Double;
    strokeOptions: _BLStrokeOptionsCore;
    approximationOptions: _BLApproximationOptions;
    metaTransform: _BLMatrix2D;
    userTransform: _BLMatrix2D;
    finalTransform: _BLMatrix2D;
  end;

function _blContextInit(self: _PBLContextCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextInit';

function _blContextInitMove(self: _PBLContextCore; other: _PBLContextCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextInitMove';

function _blContextInitWeak(self: _PBLContextCore; const other: _PBLContextCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextInitWeak';

function _blContextInitAs(self: _PBLContextCore; image: _PBLImageCore; const cci: _PBLContextCreateInfo): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextInitAs';

function _blContextDestroy(self: _PBLContextCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextDestroy';

function _blContextReset(self: _PBLContextCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextReset';

function _blContextAssignMove(self: _PBLContextCore; other: _PBLContextCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextAssignMove';

function _blContextAssignWeak(self: _PBLContextCore; const other: _PBLContextCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextAssignWeak';

function _blContextGetType(const self: _PBLContextCore): _BLContextType; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextGetType';

function _blContextGetTargetSize(const self: _PBLContextCore; targetSizeOut: _PBLSize): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextGetTargetSize';

function _blContextGetTargetImage(const self: _PBLContextCore): _PBLImageCore; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextGetTargetImage';

function _blContextBegin(self: _PBLContextCore; image: _PBLImageCore; const cci: _PBLContextCreateInfo): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextBegin';

function _blContextEnd(self: _PBLContextCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextEnd';

function _blContextFlush(self: _PBLContextCore; flags: _BLContextFlushFlags): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFlush';

function _blContextSave(self: _PBLContextCore; cookie: _PBLContextCookie): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSave';

function _blContextRestore(self: _PBLContextCore; const cookie: _PBLContextCookie): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextRestore';

function _blContextGetMetaTransform(const self: _PBLContextCore; transformOut: _PBLMatrix2D): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextGetMetaTransform';

function _blContextGetUserTransform(const self: _PBLContextCore; transformOut: _PBLMatrix2D): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextGetUserTransform';

function _blContextGetFinalTransform(const self: _PBLContextCore; transformOut: _PBLMatrix2D): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextGetFinalTransform';

function _blContextUserToMeta(self: _PBLContextCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextUserToMeta';

function _blContextApplyTransformOp(self: _PBLContextCore; opType: _BLTransformOp; const opData: Pointer): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextApplyTransformOp';

function _blContextGetHint(const self: _PBLContextCore; hintType: _BLContextHint): UInt32; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextGetHint';

function _blContextSetHint(self: _PBLContextCore; hintType: _BLContextHint; value: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetHint';

function _blContextGetHints(const self: _PBLContextCore; hintsOut: _PBLContextHints): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextGetHints';

function _blContextSetHints(self: _PBLContextCore; const hints: _PBLContextHints): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetHints';

function _blContextSetFlattenMode(self: _PBLContextCore; mode: _BLFlattenMode): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetFlattenMode';

function _blContextSetFlattenTolerance(self: _PBLContextCore; tolerance: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetFlattenTolerance';

function _blContextSetApproximationOptions(self: _PBLContextCore; const options: _PBLApproximationOptions): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetApproximationOptions';

function _blContextGetFillStyle(const self: _PBLContextCore; styleOut: _PBLVarCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextGetFillStyle';

function _blContextGetTransformedFillStyle(const self: _PBLContextCore; styleOut: _PBLVarCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextGetTransformedFillStyle';

function _blContextSetFillStyle(self: _PBLContextCore; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetFillStyle';

function _blContextSetFillStyleWithMode(self: _PBLContextCore; const style: _PBLUnknown; transformMode: _BLContextStyleTransformMode): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetFillStyleWithMode';

function _blContextSetFillStyleRgba(self: _PBLContextCore; const rgba: _PBLRgba): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetFillStyleRgba';

function _blContextSetFillStyleRgba32(self: _PBLContextCore; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetFillStyleRgba32';

function _blContextSetFillStyleRgba64(self: _PBLContextCore; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetFillStyleRgba64';

function _blContextDisableFillStyle(self: _PBLContextCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextDisableFillStyle';

function _blContextGetFillAlpha(const self: _PBLContextCore): Double; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextGetFillAlpha';

function _blContextSetFillAlpha(self: _PBLContextCore; alpha: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetFillAlpha';

function _blContextGetStrokeStyle(const self: _PBLContextCore; styleOut: _PBLVarCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextGetStrokeStyle';

function _blContextGetTransformedStrokeStyle(const self: _PBLContextCore; styleOut: _PBLVarCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextGetTransformedStrokeStyle';

function _blContextSetStrokeStyle(self: _PBLContextCore; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetStrokeStyle';

function _blContextSetStrokeStyleWithMode(self: _PBLContextCore; const style: _PBLUnknown; transformMode: _BLContextStyleTransformMode): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetStrokeStyleWithMode';

function _blContextSetStrokeStyleRgba(self: _PBLContextCore; const rgba: _PBLRgba): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetStrokeStyleRgba';

function _blContextSetStrokeStyleRgba32(self: _PBLContextCore; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetStrokeStyleRgba32';

function _blContextSetStrokeStyleRgba64(self: _PBLContextCore; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetStrokeStyleRgba64';

function _blContextDisableStrokeStyle(self: _PBLContextCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextDisableStrokeStyle';

function _blContextGetStrokeAlpha(const self: _PBLContextCore): Double; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextGetStrokeAlpha';

function _blContextSetStrokeAlpha(self: _PBLContextCore; alpha: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetStrokeAlpha';

function _blContextSwapStyles(self: _PBLContextCore; mode: _BLContextStyleSwapMode): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSwapStyles';

function _blContextGetGlobalAlpha(const self: _PBLContextCore): Double; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextGetGlobalAlpha';

function _blContextSetGlobalAlpha(self: _PBLContextCore; alpha: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetGlobalAlpha';

function _blContextGetCompOp(const self: _PBLContextCore): _BLCompOp; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextGetCompOp';

function _blContextSetCompOp(self: _PBLContextCore; compOp: _BLCompOp): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetCompOp';

function _blContextGetFillRule(const self: _PBLContextCore): _BLFillRule; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextGetFillRule';

function _blContextSetFillRule(self: _PBLContextCore; fillRule: _BLFillRule): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetFillRule';

function _blContextGetStrokeWidth(const self: _PBLContextCore): Double; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextGetStrokeWidth';

function _blContextSetStrokeWidth(self: _PBLContextCore; width: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetStrokeWidth';

function _blContextGetStrokeMiterLimit(const self: _PBLContextCore): Double; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextGetStrokeMiterLimit';

function _blContextSetStrokeMiterLimit(self: _PBLContextCore; miterLimit: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetStrokeMiterLimit';

function _blContextGetStrokeCap(const self: _PBLContextCore; position: _BLStrokeCapPosition): _BLStrokeCap; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextGetStrokeCap';

function _blContextSetStrokeCap(self: _PBLContextCore; position: _BLStrokeCapPosition; strokeCap: _BLStrokeCap): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetStrokeCap';

function _blContextSetStrokeCaps(self: _PBLContextCore; strokeCap: _BLStrokeCap): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetStrokeCaps';

function _blContextGetStrokeJoin(const self: _PBLContextCore): _BLStrokeJoin; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextGetStrokeJoin';

function _blContextSetStrokeJoin(self: _PBLContextCore; strokeJoin: _BLStrokeJoin): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetStrokeJoin';

function _blContextGetStrokeTransformOrder(const self: _PBLContextCore): _BLStrokeTransformOrder; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextGetStrokeTransformOrder';

function _blContextSetStrokeTransformOrder(self: _PBLContextCore; transformOrder: _BLStrokeTransformOrder): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetStrokeTransformOrder';

function _blContextGetStrokeDashOffset(const self: _PBLContextCore): Double; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextGetStrokeDashOffset';

function _blContextSetStrokeDashOffset(self: _PBLContextCore; dashOffset: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetStrokeDashOffset';

function _blContextGetStrokeDashArray(const self: _PBLContextCore; dashArrayOut: _PBLArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextGetStrokeDashArray';

function _blContextSetStrokeDashArray(self: _PBLContextCore; const dashArray: _PBLArrayCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetStrokeDashArray';

function _blContextGetStrokeOptions(const self: _PBLContextCore; options: _PBLStrokeOptionsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextGetStrokeOptions';

function _blContextSetStrokeOptions(self: _PBLContextCore; const options: _PBLStrokeOptionsCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextSetStrokeOptions';

function _blContextClipToRectI(self: _PBLContextCore; const rect: _PBLRectI): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextClipToRectI';

function _blContextClipToRectD(self: _PBLContextCore; const rect: _PBLRect): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextClipToRectD';

function _blContextRestoreClipping(self: _PBLContextCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextRestoreClipping';

function _blContextClearAll(self: _PBLContextCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextClearAll';

function _blContextClearRectI(self: _PBLContextCore; const rect: _PBLRectI): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextClearRectI';

function _blContextClearRectD(self: _PBLContextCore; const rect: _PBLRect): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextClearRectD';

function _blContextFillAll(self: _PBLContextCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillAll';

function _blContextFillAllRgba32(self: _PBLContextCore; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillAllRgba32';

function _blContextFillAllRgba64(self: _PBLContextCore; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillAllRgba64';

function _blContextFillAllExt(self: _PBLContextCore; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillAllExt';

function _blContextFillRectI(self: _PBLContextCore; const rect: _PBLRectI): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillRectI';

function _blContextFillRectIRgba32(self: _PBLContextCore; const rect: _PBLRectI; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillRectIRgba32';

function _blContextFillRectIRgba64(self: _PBLContextCore; const rect: _PBLRectI; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillRectIRgba64';

function _blContextFillRectIExt(self: _PBLContextCore; const rect: _PBLRectI; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillRectIExt';

function _blContextFillRectD(self: _PBLContextCore; const rect: _PBLRect): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillRectD';

function _blContextFillRectDRgba32(self: _PBLContextCore; const rect: _PBLRect; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillRectDRgba32';

function _blContextFillRectDRgba64(self: _PBLContextCore; const rect: _PBLRect; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillRectDRgba64';

function _blContextFillRectDExt(self: _PBLContextCore; const rect: _PBLRect; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillRectDExt';

function _blContextFillPathD(self: _PBLContextCore; const origin: _PBLPoint; const path: _PBLPathCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillPathD';

function _blContextFillPathDRgba32(self: _PBLContextCore; const origin: _PBLPoint; const path: _PBLPathCore; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillPathDRgba32';

function _blContextFillPathDRgba64(self: _PBLContextCore; const origin: _PBLPoint; const path: _PBLPathCore; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillPathDRgba64';

function _blContextFillPathDExt(self: _PBLContextCore; const origin: _PBLPoint; const path: _PBLPathCore; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillPathDExt';

function _blContextFillGeometry(self: _PBLContextCore; &type: _BLGeometryType; const data: Pointer): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillGeometry';

function _blContextFillGeometryRgba32(self: _PBLContextCore; &type: _BLGeometryType; const data: Pointer; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillGeometryRgba32';

function _blContextFillGeometryRgba64(self: _PBLContextCore; &type: _BLGeometryType; const data: Pointer; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillGeometryRgba64';

function _blContextFillGeometryExt(self: _PBLContextCore; &type: _BLGeometryType; const data: Pointer; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillGeometryExt';

function _blContextFillUtf8TextI(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const text: PUTF8Char; size: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillUtf8TextI';

function _blContextFillUtf8TextIRgba32(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const text: PUTF8Char; size: Size_T; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillUtf8TextIRgba32';

function _blContextFillUtf8TextIRgba64(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const text: PUTF8Char; size: Size_T; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillUtf8TextIRgba64';

function _blContextFillUtf8TextIExt(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const text: PUTF8Char; size: Size_T; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillUtf8TextIExt';

function _blContextFillUtf8TextD(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const text: PUTF8Char; size: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillUtf8TextD';

function _blContextFillUtf8TextDRgba32(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const text: PUTF8Char; size: Size_T; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillUtf8TextDRgba32';

function _blContextFillUtf8TextDRgba64(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const text: PUTF8Char; size: Size_T; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillUtf8TextDRgba64';

function _blContextFillUtf8TextDExt(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const text: PUTF8Char; size: Size_T; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillUtf8TextDExt';

function _blContextFillUtf16TextI(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const text: PUInt16; size: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillUtf16TextI';

function _blContextFillUtf16TextIRgba32(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const text: PUInt16; size: Size_T; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillUtf16TextIRgba32';

function _blContextFillUtf16TextIRgba64(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const text: PUInt16; size: Size_T; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillUtf16TextIRgba64';

function _blContextFillUtf16TextIExt(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const text: PUInt16; size: Size_T; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillUtf16TextIExt';

function _blContextFillUtf16TextD(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const text: PUInt16; size: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillUtf16TextD';

function _blContextFillUtf16TextDRgba32(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const text: PUInt16; size: Size_T; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillUtf16TextDRgba32';

function _blContextFillUtf16TextDRgba64(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const text: PUInt16; size: Size_T; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillUtf16TextDRgba64';

function _blContextFillUtf16TextDExt(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const text: PUInt16; size: Size_T; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillUtf16TextDExt';

function _blContextFillUtf32TextI(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const text: PUInt32; size: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillUtf32TextI';

function _blContextFillUtf32TextIRgba32(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const text: PUInt32; size: Size_T; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillUtf32TextIRgba32';

function _blContextFillUtf32TextIRgba64(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const text: PUInt32; size: Size_T; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillUtf32TextIRgba64';

function _blContextFillUtf32TextIExt(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const text: PUInt32; size: Size_T; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillUtf32TextIExt';

function _blContextFillUtf32TextD(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const text: PUInt32; size: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillUtf32TextD';

function _blContextFillUtf32TextDRgba32(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const text: PUInt32; size: Size_T; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillUtf32TextDRgba32';

function _blContextFillUtf32TextDRgba64(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const text: PUInt32; size: Size_T; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillUtf32TextDRgba64';

function _blContextFillUtf32TextDExt(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const text: PUInt32; size: Size_T; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillUtf32TextDExt';

function _blContextFillGlyphRunI(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const glyphRun: _PBLGlyphRun): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillGlyphRunI';

function _blContextFillGlyphRunIRgba32(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const glyphRun: _PBLGlyphRun; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillGlyphRunIRgba32';

function _blContextFillGlyphRunIRgba64(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const glyphRun: _PBLGlyphRun; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillGlyphRunIRgba64';

function _blContextFillGlyphRunIExt(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const glyphRun: _PBLGlyphRun; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillGlyphRunIExt';

function _blContextFillGlyphRunD(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const glyphRun: _PBLGlyphRun): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillGlyphRunD';

function _blContextFillGlyphRunDRgba32(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const glyphRun: _PBLGlyphRun; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillGlyphRunDRgba32';

function _blContextFillGlyphRunDRgba64(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const glyphRun: _PBLGlyphRun; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillGlyphRunDRgba64';

function _blContextFillGlyphRunDExt(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const glyphRun: _PBLGlyphRun; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillGlyphRunDExt';

function _blContextFillMaskI(self: _PBLContextCore; const origin: _PBLPointI; const mask: _PBLImageCore; const maskArea: _PBLRectI): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillMaskI';

function _blContextFillMaskIRgba32(self: _PBLContextCore; const origin: _PBLPointI; const mask: _PBLImageCore; const maskArea: _PBLRectI; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillMaskIRgba32';

function _blContextFillMaskIRgba64(self: _PBLContextCore; const origin: _PBLPointI; const mask: _PBLImageCore; const maskArea: _PBLRectI; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillMaskIRgba64';

function _blContextFillMaskIExt(self: _PBLContextCore; const origin: _PBLPointI; const mask: _PBLImageCore; const maskArea: _PBLRectI; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillMaskIExt';

function _blContextFillMaskD(self: _PBLContextCore; const origin: _PBLPoint; const mask: _PBLImageCore; const maskArea: _PBLRectI): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillMaskD';

function _blContextFillMaskDRgba32(self: _PBLContextCore; const origin: _PBLPoint; const mask: _PBLImageCore; const maskArea: _PBLRectI; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillMaskDRgba32';

function _blContextFillMaskDRgba64(self: _PBLContextCore; const origin: _PBLPoint; const mask: _PBLImageCore; const maskArea: _PBLRectI; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillMaskDRgba64';

function _blContextFillMaskDExt(self: _PBLContextCore; const origin: _PBLPoint; const mask: _PBLImageCore; const maskArea: _PBLRectI; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextFillMaskDExt';

function _blContextStrokeRectI(self: _PBLContextCore; const rect: _PBLRectI): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeRectI';

function _blContextStrokeRectIRgba32(self: _PBLContextCore; const rect: _PBLRectI; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeRectIRgba32';

function _blContextStrokeRectIRgba64(self: _PBLContextCore; const rect: _PBLRectI; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeRectIRgba64';

function _blContextStrokeRectIExt(self: _PBLContextCore; const rect: _PBLRectI; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeRectIExt';

function _blContextStrokeRectD(self: _PBLContextCore; const rect: _PBLRect): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeRectD';

function _blContextStrokeRectDRgba32(self: _PBLContextCore; const rect: _PBLRect; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeRectDRgba32';

function _blContextStrokeRectDRgba64(self: _PBLContextCore; const rect: _PBLRect; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeRectDRgba64';

function _blContextStrokeRectDExt(self: _PBLContextCore; const rect: _PBLRect; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeRectDExt';

function _blContextStrokePathD(self: _PBLContextCore; const origin: _PBLPoint; const path: _PBLPathCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokePathD';

function _blContextStrokePathDRgba32(self: _PBLContextCore; const origin: _PBLPoint; const path: _PBLPathCore; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokePathDRgba32';

function _blContextStrokePathDRgba64(self: _PBLContextCore; const origin: _PBLPoint; const path: _PBLPathCore; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokePathDRgba64';

function _blContextStrokePathDExt(self: _PBLContextCore; const origin: _PBLPoint; const path: _PBLPathCore; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokePathDExt';

function _blContextStrokeGeometry(self: _PBLContextCore; &type: _BLGeometryType; const data: Pointer): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeGeometry';

function _blContextStrokeGeometryRgba32(self: _PBLContextCore; &type: _BLGeometryType; const data: Pointer; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeGeometryRgba32';

function _blContextStrokeGeometryRgba64(self: _PBLContextCore; &type: _BLGeometryType; const data: Pointer; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeGeometryRgba64';

function _blContextStrokeGeometryExt(self: _PBLContextCore; &type: _BLGeometryType; const data: Pointer; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeGeometryExt';

function _blContextStrokeUtf8TextI(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const text: PUTF8Char; size: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeUtf8TextI';

function _blContextStrokeUtf8TextIRgba32(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const text: PUTF8Char; size: Size_T; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeUtf8TextIRgba32';

function _blContextStrokeUtf8TextIRgba64(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const text: PUTF8Char; size: Size_T; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeUtf8TextIRgba64';

function _blContextStrokeUtf8TextIExt(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const text: PUTF8Char; size: Size_T; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeUtf8TextIExt';

function _blContextStrokeUtf8TextD(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const text: PUTF8Char; size: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeUtf8TextD';

function _blContextStrokeUtf8TextDRgba32(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const text: PUTF8Char; size: Size_T; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeUtf8TextDRgba32';

function _blContextStrokeUtf8TextDRgba64(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const text: PUTF8Char; size: Size_T; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeUtf8TextDRgba64';

function _blContextStrokeUtf8TextDExt(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const text: PUTF8Char; size: Size_T; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeUtf8TextDExt';

function _blContextStrokeUtf16TextI(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const text: PUInt16; size: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeUtf16TextI';

function _blContextStrokeUtf16TextIRgba32(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const text: PUInt16; size: Size_T; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeUtf16TextIRgba32';

function _blContextStrokeUtf16TextIRgba64(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const text: PUInt16; size: Size_T; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeUtf16TextIRgba64';

function _blContextStrokeUtf16TextIExt(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const text: PUInt16; size: Size_T; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeUtf16TextIExt';

function _blContextStrokeUtf16TextD(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const text: PUInt16; size: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeUtf16TextD';

function _blContextStrokeUtf16TextDRgba32(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const text: PUInt16; size: Size_T; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeUtf16TextDRgba32';

function _blContextStrokeUtf16TextDRgba64(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const text: PUInt16; size: Size_T; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeUtf16TextDRgba64';

function _blContextStrokeUtf16TextDExt(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const text: PUInt16; size: Size_T; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeUtf16TextDExt';

function _blContextStrokeUtf32TextI(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const text: PUInt32; size: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeUtf32TextI';

function _blContextStrokeUtf32TextIRgba32(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const text: PUInt32; size: Size_T; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeUtf32TextIRgba32';

function _blContextStrokeUtf32TextIRgba64(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const text: PUInt32; size: Size_T; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeUtf32TextIRgba64';

function _blContextStrokeUtf32TextIExt(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const text: PUInt32; size: Size_T; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeUtf32TextIExt';

function _blContextStrokeUtf32TextD(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const text: PUInt32; size: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeUtf32TextD';

function _blContextStrokeUtf32TextDRgba32(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const text: PUInt32; size: Size_T; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeUtf32TextDRgba32';

function _blContextStrokeUtf32TextDRgba64(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const text: PUInt32; size: Size_T; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeUtf32TextDRgba64';

function _blContextStrokeUtf32TextDExt(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const text: PUInt32; size: Size_T; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeUtf32TextDExt';

function _blContextStrokeGlyphRunI(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const glyphRun: _PBLGlyphRun): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeGlyphRunI';

function _blContextStrokeGlyphRunIRgba32(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const glyphRun: _PBLGlyphRun; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeGlyphRunIRgba32';

function _blContextStrokeGlyphRunIRgba64(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const glyphRun: _PBLGlyphRun; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeGlyphRunIRgba64';

function _blContextStrokeGlyphRunIExt(self: _PBLContextCore; const origin: _PBLPointI; const font: _PBLFontCore; const glyphRun: _PBLGlyphRun; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeGlyphRunIExt';

function _blContextStrokeGlyphRunD(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const glyphRun: _PBLGlyphRun): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeGlyphRunD';

function _blContextStrokeGlyphRunDRgba32(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const glyphRun: _PBLGlyphRun; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeGlyphRunDRgba32';

function _blContextStrokeGlyphRunDRgba64(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const glyphRun: _PBLGlyphRun; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeGlyphRunDRgba64';

function _blContextStrokeGlyphRunDExt(self: _PBLContextCore; const origin: _PBLPoint; const font: _PBLFontCore; const glyphRun: _PBLGlyphRun; const style: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextStrokeGlyphRunDExt';

function _blContextBlitImageI(self: _PBLContextCore; const origin: _PBLPointI; const img: _PBLImageCore; const imgArea: _PBLRectI): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextBlitImageI';

function _blContextBlitImageD(self: _PBLContextCore; const origin: _PBLPoint; const img: _PBLImageCore; const imgArea: _PBLRectI): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextBlitImageD';

function _blContextBlitScaledImageI(self: _PBLContextCore; const rect: _PBLRectI; const img: _PBLImageCore; const imgArea: _PBLRectI): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextBlitScaledImageI';

function _blContextBlitScaledImageD(self: _PBLContextCore; const rect: _PBLRect; const img: _PBLImageCore; const imgArea: _PBLRectI): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blContextBlitScaledImageD';
{$ENDREGION 'context.h'}

{$REGION 'gradient.h'}
type
  _BLGradientType = Integer;

const
  _BL_GRADIENT_TYPE_LINEAR    = 0;
  _BL_GRADIENT_TYPE_RADIAL    = 1;
  _BL_GRADIENT_TYPE_CONIC     = 2;
  _BL_GRADIENT_TYPE_MAX_VALUE = 2;

type
  _BLGradientValue = Integer;

const
  _BL_GRADIENT_VALUE_COMMON_X0    = 0;
  _BL_GRADIENT_VALUE_COMMON_Y0    = 1;
  _BL_GRADIENT_VALUE_COMMON_X1    = 2;
  _BL_GRADIENT_VALUE_COMMON_Y1    = 3;
  _BL_GRADIENT_VALUE_RADIAL_R0    = 4;
  _BL_GRADIENT_VALUE_RADIAL_R1    = 5;
  _BL_GRADIENT_VALUE_CONIC_ANGLE  = 2;
  _BL_GRADIENT_VALUE_CONIC_REPEAT = 3;
  _BL_GRADIENT_VALUE_MAX_VALUE    = 5;

type
  _BLGradientQuality = Integer;

const
  _BL_GRADIENT_QUALITY_NEAREST   = 0;
  _BL_GRADIENT_QUALITY_SMOOTH    = 1;
  _BL_GRADIENT_QUALITY_DITHER    = 2;
  _BL_GRADIENT_QUALITY_MAX_VALUE = 2;

type
  _BLGradientStop = record
    offset: Double;
    rgba: _BLRgba64;
  end;
  _PBLGradientStop = ^_BLGradientStop;

type
  _BLLinearGradientValues = record
    x0: Double;
    y0: Double;
    x1: Double;
    y1: Double;
  end;

type
  _BLRadialGradientValues = record
    x0: Double;
    y0: Double;
    x1: Double;
    y1: Double;
    r0: Double;
    r1: Double;
  end;

type
  _BLConicGradientValues = record
    x0: Double;
    y0: Double;
    angle: Double;
    &repeat: Double;
  end;

type
  _BLGradientCore = record
    _base: _BLObjectCore;
  end;
  _PBLGradientCore = ^_BLGradientCore;

function _blGradientInit(self: _PBLGradientCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientInit';

function _blGradientInitMove(self: _PBLGradientCore; other: _PBLGradientCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientInitMove';

function _blGradientInitWeak(self: _PBLGradientCore; const other: _PBLGradientCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientInitWeak';

function _blGradientInitAs(self: _PBLGradientCore; &type: _BLGradientType; const values: Pointer; extendMode: _BLExtendMode; const stops: _PBLGradientStop; n: Size_T; const transform: _PBLMatrix2D): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientInitAs';

function _blGradientDestroy(self: _PBLGradientCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientDestroy';

function _blGradientReset(self: _PBLGradientCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientReset';

function _blGradientAssignMove(self: _PBLGradientCore; other: _PBLGradientCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientAssignMove';

function _blGradientAssignWeak(self: _PBLGradientCore; const other: _PBLGradientCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientAssignWeak';

function _blGradientCreate(self: _PBLGradientCore; &type: _BLGradientType; const values: Pointer; extendMode: _BLExtendMode; const stops: _PBLGradientStop; n: Size_T; const transform: _PBLMatrix2D): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientCreate';

function _blGradientShrink(self: _PBLGradientCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientShrink';

function _blGradientReserve(self: _PBLGradientCore; n: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientReserve';

function _blGradientGetType(const self: _PBLGradientCore): _BLGradientType; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientGetType';

function _blGradientSetType(self: _PBLGradientCore; &type: _BLGradientType): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientSetType';

function _blGradientGetExtendMode(const self: _PBLGradientCore): _BLExtendMode; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientGetExtendMode';

function _blGradientSetExtendMode(self: _PBLGradientCore; extendMode: _BLExtendMode): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientSetExtendMode';

function _blGradientGetValue(const self: _PBLGradientCore; index: Size_T): Double; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientGetValue';

function _blGradientSetValue(self: _PBLGradientCore; index: Size_T; value: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientSetValue';

function _blGradientSetValues(self: _PBLGradientCore; index: Size_T; const values: PDouble; n: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientSetValues';

function _blGradientGetSize(const self: _PBLGradientCore): Size_T; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientGetSize';

function _blGradientGetCapacity(const self: _PBLGradientCore): Size_T; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientGetCapacity';

function _blGradientGetStops(const self: _PBLGradientCore): _PBLGradientStop; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientGetStops';

function _blGradientResetStops(self: _PBLGradientCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientResetStops';

function _blGradientAssignStops(self: _PBLGradientCore; const stops: _PBLGradientStop; n: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientAssignStops';

function _blGradientAddStopRgba32(self: _PBLGradientCore; offset: Double; argb32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientAddStopRgba32';

function _blGradientAddStopRgba64(self: _PBLGradientCore; offset: Double; argb64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientAddStopRgba64';

function _blGradientRemoveStop(self: _PBLGradientCore; index: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientRemoveStop';

function _blGradientRemoveStopByOffset(self: _PBLGradientCore; offset: Double; all: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientRemoveStopByOffset';

function _blGradientRemoveStopsByIndex(self: _PBLGradientCore; rStart: Size_T; rEnd: Size_T): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientRemoveStopsByIndex';

function _blGradientRemoveStopsByOffset(self: _PBLGradientCore; offsetMin: Double; offsetMax: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientRemoveStopsByOffset';

function _blGradientReplaceStopRgba32(self: _PBLGradientCore; index: Size_T; offset: Double; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientReplaceStopRgba32';

function _blGradientReplaceStopRgba64(self: _PBLGradientCore; index: Size_T; offset: Double; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientReplaceStopRgba64';

function _blGradientIndexOfStop(const self: _PBLGradientCore; offset: Double): Size_T; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientIndexOfStop';

function _blGradientGetTransform(const self: _PBLGradientCore; transformOut: _PBLMatrix2D): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientGetTransform';

function _blGradientGetTransformType(const self: _PBLGradientCore): _BLTransformType; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientGetTransformType';

function _blGradientApplyTransformOp(self: _PBLGradientCore; opType: _BLTransformOp; const opData: Pointer): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientApplyTransformOp';

function _blGradientEquals(const a: _PBLGradientCore; const b: _PBLGradientCore): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blGradientEquals';
{$ENDREGION 'gradient.h'}

{$REGION 'pattern.h'}
type
  _BLPatternQuality = Integer;

const
  _BL_PATTERN_QUALITY_NEAREST   = 0;
  _BL_PATTERN_QUALITY_BILINEAR  = 1;
  _BL_PATTERN_QUALITY_MAX_VALUE = 1;

type
  _BLPatternCore = record
    _base: _BLObjectCore;
  end;
  _PBLPatternCore = ^_BLPatternCore;

function _blPatternInit(self: _PBLPatternCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPatternInit';

function _blPatternInitMove(self: _PBLPatternCore; other: _PBLPatternCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPatternInitMove';

function _blPatternInitWeak(self: _PBLPatternCore; const other: _PBLPatternCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPatternInitWeak';

function _blPatternInitAs(self: _PBLPatternCore; const image: _PBLImageCore; const area: _PBLRectI; extendMode: _BLExtendMode; const transform: _PBLMatrix2D): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPatternInitAs';

function _blPatternDestroy(self: _PBLPatternCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPatternDestroy';

function _blPatternReset(self: _PBLPatternCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPatternReset';

function _blPatternAssignMove(self: _PBLPatternCore; other: _PBLPatternCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPatternAssignMove';

function _blPatternAssignWeak(self: _PBLPatternCore; const other: _PBLPatternCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPatternAssignWeak';

function _blPatternAssignDeep(self: _PBLPatternCore; const other: _PBLPatternCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPatternAssignDeep';

function _blPatternCreate(self: _PBLPatternCore; const image: _PBLImageCore; const area: _PBLRectI; extendMode: _BLExtendMode; const transform: _PBLMatrix2D): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPatternCreate';

function _blPatternGetImage(const self: _PBLPatternCore; image: _PBLImageCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPatternGetImage';

function _blPatternSetImage(self: _PBLPatternCore; const image: _PBLImageCore; const area: _PBLRectI): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPatternSetImage';

function _blPatternResetImage(self: _PBLPatternCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPatternResetImage';

function _blPatternGetArea(const self: _PBLPatternCore; areaOut: _PBLRectI): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPatternGetArea';

function _blPatternSetArea(self: _PBLPatternCore; const area: _PBLRectI): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPatternSetArea';

function _blPatternResetArea(self: _PBLPatternCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPatternResetArea';

function _blPatternGetExtendMode(const self: _PBLPatternCore): _BLExtendMode; cdecl;
  external _LIB_BLEND2D name _PU + 'blPatternGetExtendMode';

function _blPatternSetExtendMode(self: _PBLPatternCore; extendMode: _BLExtendMode): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPatternSetExtendMode';

function _blPatternGetTransform(const self: _PBLPatternCore; transformOut: _PBLMatrix2D): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPatternGetTransform';

function _blPatternGetTransformType(const self: _PBLPatternCore): _BLTransformType; cdecl;
  external _LIB_BLEND2D name _PU + 'blPatternGetTransformType';

function _blPatternApplyTransformOp(self: _PBLPatternCore; opType: _BLTransformOp; const opData: Pointer): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPatternApplyTransformOp';

function _blPatternEquals(const a: _PBLPatternCore; const b: _PBLPatternCore): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blPatternEquals';
{$ENDREGION 'pattern.h'}

{$REGION 'pixelconverter.h'}
type
  _BLPixelConverterCreateFlags = Integer;

const
  _BL_PIXEL_CONVERTER_CREATE_NO_FLAGS               = 0;
  _BL_PIXEL_CONVERTER_CREATE_FLAG_DONT_COPY_PALETTE = 1;
  _BL_PIXEL_CONVERTER_CREATE_FLAG_ALTERABLE_PALETTE = 2;
  _BL_PIXEL_CONVERTER_CREATE_FLAG_NO_MULTI_STEP     = 4;

type
  _BLPixelConverterOptions = record
    origin: _BLPointI;
    gap: Size_T;
  end;
  _PBLPixelConverterOptions = ^_BLPixelConverterOptions;

type
  _PBLPixelConverterCore = ^_BLPixelConverterCore;

  _BLPixelConverterFunc = function(const self: _PBLPixelConverterCore; dstData: PUInt8; dstStride: IntPtr; const srcData: PUInt8; srcStride: IntPtr; w: UInt32; h: UInt32; const options: _PBLPixelConverterOptions): _BLResult; cdecl;

  _BLPixelConverterCore = record
  case Byte of
    0: (convertFunc: _BLPixelConverterFunc;
        internalFlags: UInt8);
    1: (data: array [0..79] of UInt8);
  end;

function _blPixelConverterInit(self: _PBLPixelConverterCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPixelConverterInit';

function _blPixelConverterInitWeak(self: _PBLPixelConverterCore; const other: _PBLPixelConverterCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPixelConverterInitWeak';

function _blPixelConverterDestroy(self: _PBLPixelConverterCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPixelConverterDestroy';

function _blPixelConverterReset(self: _PBLPixelConverterCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPixelConverterReset';

function _blPixelConverterAssign(self: _PBLPixelConverterCore; const other: _PBLPixelConverterCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPixelConverterAssign';

function _blPixelConverterCreate(self: _PBLPixelConverterCore; const dstInfo: _PBLFormatInfo; const srcInfo: _PBLFormatInfo; createFlags: _BLPixelConverterCreateFlags): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPixelConverterCreate';

function _blPixelConverterConvert(const self: _PBLPixelConverterCore; dstData: Pointer; dstStride: IntPtr; const srcData: Pointer; srcStride: IntPtr; w: UInt32; h: UInt32; const options: _PBLPixelConverterOptions): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blPixelConverterConvert';
{$ENDREGION 'pixelconverter.h'}

{$REGION 'random.h'}
type
  _BLRandom = record
    data: array [0..1] of UInt64;
  end;
  _PBLRandom = ^_BLRandom;

function _blRandomReset(self: _PBLRandom; seed: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blRandomReset';

function _blRandomNextUInt32(self: _PBLRandom): UInt32; cdecl;
  external _LIB_BLEND2D name _PU + 'blRandomNextUInt32';

function _blRandomNextUInt64(self: _PBLRandom): UInt64; cdecl;
  external _LIB_BLEND2D name _PU + 'blRandomNextUInt64';

function _blRandomNextDouble(self: _PBLRandom): Double; cdecl;
  external _LIB_BLEND2D name _PU + 'blRandomNextDouble';
{$ENDREGION 'random.h'}

{$REGION 'runtime.h'}
type
  _BLRuntimeLimits = Integer;

const
  _BL_RUNTIME_MAX_IMAGE_SIZE   = 65535;
  _BL_RUNTIME_MAX_THREAD_COUNT = 32;

type
  _BLRuntimeInfoType = Integer;

const
  _BL_RUNTIME_INFO_TYPE_BUILD      = 0;
  _BL_RUNTIME_INFO_TYPE_SYSTEM     = 1;
  _BL_RUNTIME_INFO_TYPE_RESOURCE   = 2;
  _BL_RUNTIME_INFO_TYPE_MAX_VALUE  = 2;

type
  _BLRuntimeBuildType = Integer;

const
  _BL_RUNTIME_BUILD_TYPE_DEBUG   = 0;
  _BL_RUNTIME_BUILD_TYPE_RELEASE = 1;

type
  _BLRuntimeCpuArch = Integer;

const
  _BL_RUNTIME_CPU_ARCH_UNKNOWN = 0;
  _BL_RUNTIME_CPU_ARCH_X86     = 1;
  _BL_RUNTIME_CPU_ARCH_ARM     = 2;
  _BL_RUNTIME_CPU_ARCH_MIPS    = 3;

type
  _BLRuntimeCpuFeatures = Integer;

const
  _BL_RUNTIME_CPU_FEATURE_X86_SSE2   = $00000001;
  _BL_RUNTIME_CPU_FEATURE_X86_SSE3   = $00000002;
  _BL_RUNTIME_CPU_FEATURE_X86_SSSE3  = $00000004;
  _BL_RUNTIME_CPU_FEATURE_X86_SSE4_1 = $00000008;
  _BL_RUNTIME_CPU_FEATURE_X86_SSE4_2 = $00000010;
  _BL_RUNTIME_CPU_FEATURE_X86_AVX    = $00000020;
  _BL_RUNTIME_CPU_FEATURE_X86_AVX2   = $00000040;
  _BL_RUNTIME_CPU_FEATURE_X86_AVX512 = $00000080;
  _BL_RUNTIME_CPU_FEATURE_ARM_ASIMD  = $00000001;
  _BL_RUNTIME_CPU_FEATURE_ARM_CRC32  = $00000002;
  _BL_RUNTIME_CPU_FEATURE_ARM_PMULL  = $00000004;

type
  _BLRuntimeCleanupFlags = Integer;

const
  _BL_RUNTIME_CLEANUP_NO_FLAGS    = 0;
  _BL_RUNTIME_CLEANUP_OBJECT_POOL = $00000001;
  _BL_RUNTIME_CLEANUP_ZEROED_POOL = $00000002;
  _BL_RUNTIME_CLEANUP_THREAD_POOL = $00000010;
  _BL_RUNTIME_CLEANUP_EVERYTHING  = $FFFFFFFF;

type
  _BLRuntimeBuildInfo = record
    majorVersion: UInt32;
    minorVersion: UInt32;
    patchVersion: UInt32;
    buildType: UInt32;
    baselineCpuFeatures: UInt32;
    supportedCpuFeatures: UInt32;
    maxImageSize: UInt32;
    maxThreadCount: UInt32;
    reserved: array [0..1] of UInt32;
    compilerInfo: array [0..31] of UTF8Char;
  end;

type
  _BLRuntimeSystemInfo = record
    cpuArch: UInt32;
    cpuFeatures: UInt32;
    coreCount: UInt32;
    threadCount: UInt32;
    threadStackSize: UInt32;
    removed: UInt32;
    allocationGranularity: UInt32;
    reserved: array [0..4] of UInt32;
    cpuVendor: array [0..15] of UTF8Char;
    cpuBrand: array [0..63] of UTF8Char;
  end;

type
  _BLRuntimeResourceInfo = record
    vmUsed: Size_T;
    vmReserved: Size_T;
    vmOverhead: Size_T;
    vmBlockCount: Size_T;
    zmUsed: Size_T;
    zmReserved: Size_T;
    zmOverhead: Size_T;
    zmBlockCount: Size_T;
    dynamicPipelineCount: Size_T;
    reserved: array [0..6] of Size_T;
  end;

function _blRuntimeInit(): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blRuntimeInit';

function _blRuntimeShutdown(): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blRuntimeShutdown';

function _blRuntimeCleanup(cleanupFlags: _BLRuntimeCleanupFlags): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blRuntimeCleanup';

function _blRuntimeQueryInfo(infoType: _BLRuntimeInfoType; infoOut: Pointer): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blRuntimeQueryInfo';

function _blRuntimeMessageOut(const msg: PUTF8Char): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blRuntimeMessageOut';

function _blRuntimeMessageFmt(const fmt: PUTF8Char): _BLResult varargs; cdecl;
  external _LIB_BLEND2D name _PU + 'blRuntimeMessageFmt';

function _blRuntimeMessageVFmt(const fmt: PUTF8Char; ap: Pointer): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blRuntimeMessageVFmt';

{$IF Defined(MSWINDOWS)}
function _blResultFromWinError(e: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blResultFromWinError';
{$ELSEIF Defined(POSIX)}
function _blResultFromPosixError(e: Integer): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + '_blResultFromPosixError';
{$ENDIF}
{$ENDREGION 'runtime.h'}

{$REGION 'runtimescope.h'}
type
  _BLRuntimeScopeCore = record
    data: array [0..1] of UInt32;
  end;
  _PBLRuntimeScopeCore = ^_BLRuntimeScopeCore;

function _blRuntimeScopeBegin(self: _PBLRuntimeScopeCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blRuntimeScopeBegin';

function _blRuntimeScopeEnd(self: _PBLRuntimeScopeCore): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blRuntimeScopeEnd';

function _blRuntimeScopeIsActive(const self: _PBLRuntimeScopeCore): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blRuntimeScopeIsActive';
{$ENDREGION 'runtimescope.h'}

{$REGION 'var.h'}
function _blVarInitType(self: _PBLUnknown; &type: _BLObjectType): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarInitType';

function _blVarInitNull(self: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarInitNull';

function _blVarInitBool(self: _PBLUnknown; value: Boolean): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarInitBool';

function _blVarInitInt32(self: _PBLUnknown; value: Int32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarInitInt32';

function _blVarInitInt64(self: _PBLUnknown; value: Int64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarInitInt64';

function _blVarInitUInt32(self: _PBLUnknown; value: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarInitUInt32';

function _blVarInitUInt64(self: _PBLUnknown; value: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarInitUInt64';

function _blVarInitDouble(self: _PBLUnknown; value: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarInitDouble';

function _blVarInitRgba(self: _PBLUnknown; const rgba: _PBLRgba): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarInitRgba';

function _blVarInitRgba32(self: _PBLUnknown; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarInitRgba32';

function _blVarInitRgba64(self: _PBLUnknown; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarInitRgba64';

function _blVarInitMove(self: _PBLUnknown; other: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarInitMove';

function _blVarInitWeak(self: _PBLUnknown; const other: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarInitWeak';

function _blVarDestroy(self: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarDestroy';

function _blVarReset(self: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarReset';

function _blVarAssignNull(self: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarAssignNull';

function _blVarAssignBool(self: _PBLUnknown; value: Boolean): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarAssignBool';

function _blVarAssignInt32(self: _PBLUnknown; value: Int32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarAssignInt32';

function _blVarAssignInt64(self: _PBLUnknown; value: Int64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarAssignInt64';

function _blVarAssignUInt32(self: _PBLUnknown; value: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarAssignUInt32';

function _blVarAssignUInt64(self: _PBLUnknown; value: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarAssignUInt64';

function _blVarAssignDouble(self: _PBLUnknown; value: Double): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarAssignDouble';

function _blVarAssignRgba(self: _PBLUnknown; const rgba: _PBLRgba): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarAssignRgba';

function _blVarAssignRgba32(self: _PBLUnknown; rgba32: UInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarAssignRgba32';

function _blVarAssignRgba64(self: _PBLUnknown; rgba64: UInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarAssignRgba64';

function _blVarAssignMove(self: _PBLUnknown; other: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarAssignMove';

function _blVarAssignWeak(self: _PBLUnknown; const other: _PBLUnknown): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarAssignWeak';

function _blVarGetType(const self: _PBLUnknown): _BLObjectType; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarGetType';

function _blVarToBool(const self: _PBLUnknown; &out: PBoolean): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarToBool';

function _blVarToInt32(const self: _PBLUnknown; &out: PInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarToInt32';

function _blVarToInt64(const self: _PBLUnknown; &out: PInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarToInt64';

function _blVarToUInt32(const self: _PBLUnknown; &out: PUInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarToUInt32';

function _blVarToUInt64(const self: _PBLUnknown; &out: PUInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarToUInt64';

function _blVarToDouble(const self: _PBLUnknown; &out: PDouble): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarToDouble';

function _blVarToRgba(const self: _PBLUnknown; &out: _PBLRgba): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarToRgba';

function _blVarToRgba32(const self: _PBLUnknown; &out: PUInt32): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarToRgba32';

function _blVarToRgba64(const self: _PBLUnknown; &out: PUInt64): _BLResult; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarToRgba64';

function _blVarEquals(const a: _PBLUnknown; const b: _PBLUnknown): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarEquals';

function _blVarEqualsNull(const self: _PBLUnknown): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarEqualsNull';

function _blVarEqualsBool(const self: _PBLUnknown; value: Boolean): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarEqualsBool';

function _blVarEqualsInt64(const self: _PBLUnknown; value: Int64): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarEqualsInt64';

function _blVarEqualsUInt64(const self: _PBLUnknown; value: UInt64): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarEqualsUInt64';

function _blVarEqualsDouble(const self: _PBLUnknown; value: Double): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarEqualsDouble';

function _blVarEqualsRgba(const self: _PBLUnknown; const rgba: _PBLRgba): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarEqualsRgba';

function _blVarEqualsRgba32(const self: _PBLUnknown; rgba32: UInt32): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarEqualsRgba32';

function _blVarEqualsRgba64(const self: _PBLUnknown; rgba64: UInt64): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarEqualsRgba64';

function _blVarStrictEquals(const a: _PBLUnknown; const b: _PBLUnknown): Boolean; cdecl;
  external _LIB_BLEND2D name _PU + 'blVarStrictEquals';
{$ENDREGION 'var.h'}

implementation

function _BL_MAKE_TAG(const A, B, C, D: Byte): _BLTag; inline;
begin
  Result := (A shl 24) or (B shl 16) or (C shl 8) or D;
end;

end.
